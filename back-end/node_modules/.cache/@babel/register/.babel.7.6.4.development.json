{
  "{\"sourceRoot\":\"/home/haidara/Documents/belance/back-end/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/belance/back-end\",\"filename\":\"/home/haidara/Documents/belance/back-end/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/belance/back-end",
      "filename": "/home/haidara/Documents/belance/back-end/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/belance/back-end/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/belance/back-end/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/belance/back-end/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nvar _users = _interopRequireDefault(require(\"./db/users\"));\n\nvar _projects = _interopRequireDefault(require(\"./db/projects\"));\n\nvar _auth = require(\"./auth.js\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _verfiy = _interopRequireDefault(require(\"./db/verfiy\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//import jwt from 'jsonwebtoken'\nvar start =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7() {\n    var controller3, controller4;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return (0, _users[\"default\"])();\n\n          case 2:\n            controller3 = _context7.sent;\n            _context7.next = 5;\n            return (0, _projects[\"default\"])();\n\n          case 5:\n            controller4 = _context7.sent;\n\n            //USERS VIEW\n            _app[\"default\"].get(\"/api/userslist\",\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(req, res) {\n                var users_accounts;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return controller3.getUsers();\n\n                      case 2:\n                        users_accounts = _context.sent;\n                        res.json({\n                          data: users_accounts\n                        });\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].post('/api/adduser',\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(req, res, next) {\n                var _req$body, name, email, password, date, type, about_me, experience, adress, user;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _req$body = req.body, name = _req$body.name, email = _req$body.email, password = _req$body.password, date = _req$body.date, type = _req$body.type, about_me = _req$body.about_me, experience = _req$body.experience, adress = _req$body.adress;\n                        _context2.next = 4;\n                        return controller3.addUser({\n                          name: name,\n                          email: email,\n                          password: password,\n                          date: date,\n                          type: type,\n                          about_me: about_me,\n                          experience: experience,\n                          adress: adress\n                        });\n\n                      case 4:\n                        user = _context2.sent;\n                        res.send({\n                          NewUser: user,\n                          status: true\n                        });\n                        _context2.next = 11;\n                        break;\n\n                      case 8:\n                        _context2.prev = 8;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        next(_context2.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 8]]);\n              }));\n\n              return function (_x3, _x4, _x5) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].post('/api/users/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(req, res, next) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        id = req.params.id;\n                        _context3.next = 4;\n                        return controller3.deleteUsers(id);\n\n                      case 4:\n                        result = _context3.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        console.log();\n                        _context3.next = 12;\n                        break;\n\n                      case 9:\n                        _context3.prev = 9;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        next(_context3.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 9]]);\n              }));\n\n              return function (_x6, _x7, _x8) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].post('/api/users/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(req, res, next) {\n                var id, _req$body2, name, email, password, date, type, about_me, experience, adress, result;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        id = req.params.id;\n                        _req$body2 = req.body, name = _req$body2.name, email = _req$body2.email, password = _req$body2.password, date = _req$body2.date, type = _req$body2.type, about_me = _req$body2.about_me, experience = _req$body2.experience, adress = _req$body2.adress;\n                        _context4.next = 5;\n                        return controller3.updateUsers(id, {\n                          name: name,\n                          email: email,\n                          password: password,\n                          date: date,\n                          type: type,\n                          about_me: about_me,\n                          experience: experience,\n                          adress: adress\n                        });\n\n                      case 5:\n                        result = _context4.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        return _context4.abrupt(\"return\", result);\n\n                      case 10:\n                        _context4.prev = 10;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        next(_context4.t0);\n\n                      case 13:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 10]]);\n              }));\n\n              return function (_x9, _x10, _x11) {\n                return _ref5.apply(this, arguments);\n              };\n            }()); ////////////////projects\n\n\n            _app[\"default\"].post('/projects/create',\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(req, res, next) {\n                var _req$body3, users_id, title, result;\n\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.prev = 0;\n                        _req$body3 = req.body, users_id = _req$body3.users_id, title = _req$body3.title;\n                        _context5.next = 4;\n                        return controller4.createproject({\n                          users_id: users_id,\n                          title: title\n                        });\n\n                      case 4:\n                        result = _context5.sent;\n                        res.json({\n                          done: true,\n                          result: result\n                        });\n                        _context5.next = 11;\n                        break;\n\n                      case 8:\n                        _context5.prev = 8;\n                        _context5.t0 = _context5[\"catch\"](0);\n                        next(_context5.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[0, 8]]);\n              }));\n\n              return function (_x12, _x13, _x14) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].post('/api/login',\n            /*#__PURE__*/\n            function () {\n              var _ref7 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee6(req, res) {\n                var user, check;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        console.log(\"here\");\n                        user = {\n                          first_name: req.body.first_name,\n                          password: req.body.password\n                        };\n                        console.log(user);\n                        _context6.next = 5;\n                        return controller3.findUser(user);\n\n                      case 5:\n                        check = _context6.sent;\n                        console.log(check);\n\n                        if (check) {\n                          jwt.sign({\n                            user: user\n                          }, 'secretkey', {\n                            expiresIn: '3000s'\n                          }, function (err, token) {\n                            res.json({\n                              token: token,\n                              user: user\n                            });\n                          });\n                        } else res.json({\n                          success: false\n                        });\n\n                      case 8:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x15, _x16) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n            /**\n             * Route that returns a list of contacts\n             * @module contacts/list\n             * @param {Express.Request} req - request\n             * @param {Express.Response} res - response \n             * @return {json} rows - array of contacts\n             */\n\n\n            _app[\"default\"].post('/api/posts', _verfiy[\"default\"], function (req, res) {\n              console.log(req.token); //const text = req.body.text\n              // console.log(token);\n\n              jwt.verify(req.token, 'secretkey', function (err, authData) {\n                if (err) {\n                  res.json({\n                    message: \"not verified\",\n                    err: err\n                  }); //res.sendStatus(403);\n                } else {\n                  //const result = await controller3.addUser(text)\n                  res.json({\n                    message: \"verified\",\n                    authData: authData\n                  });\n                }\n              });\n            });\n\n            _app[\"default\"].listen(8080, function () {\n              console.log(\"server listening on port 8080\");\n            });\n\n          case 14:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nstart(); //export default app;\n\nmodule.exports = _app[\"default\"];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "start",
        "controller3",
        "controller4",
        "app",
        "get",
        "req",
        "res",
        "getUsers",
        "users_accounts",
        "json",
        "data",
        "post",
        "next",
        "body",
        "name",
        "email",
        "password",
        "date",
        "type",
        "about_me",
        "experience",
        "adress",
        "addUser",
        "user",
        "send",
        "NewUser",
        "status",
        "id",
        "params",
        "deleteUsers",
        "result",
        "success",
        "console",
        "log",
        "updateUsers",
        "users_id",
        "title",
        "createproject",
        "done",
        "first_name",
        "findUser",
        "check",
        "jwt",
        "sign",
        "expiresIn",
        "err",
        "token",
        "verifyToken",
        "verify",
        "authData",
        "message",
        "listen",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src",
      "sourcesContent": [
        "import app from \"./app\";\nimport initializeUsers from \"./db/users\"\nimport initializeProjects from \"./db/projects\"\n\nimport { isloggedIn, authenticateUser, logout } from \"./auth.js\";\nimport path from 'path'\nimport verifyToken from \"./db/verfiy\"\n//import jwt from 'jsonwebtoken'\n\n\n\nconst start = async () => {\n\n  const controller3 = await initializeUsers();\n\n  const controller4 = await initializeProjects();\n\n\n\n\n\n  //USERS VIEW\n\n  app.get(\"/api/userslist\", async (req, res) => {\n\n    const users_accounts = await controller3.getUsers()\n    res.json({\n      data: users_accounts\n    })\n  });\n\n  app.post('/api/adduser', async (req, res, next) => {\n\n    try {\n      const { name, email, password, date, type, about_me, experience, adress } = req.body\n\n      const user = await controller3.addUser({ name, email, password, date, type, about_me, experience, adress })\n      res.send({ NewUser: user, status: true })\n    } catch (err) {\n      next(err)\n    }\n\n  })\n  app.post('/api/users/delete/:id', async (req, res, next) => {\n\n    try {\n      const { id } = req.params;\n      const result = await controller3.deleteUsers(id);\n      res.json({ success: true, result });\n      console.log()\n    } catch (err) {\n      next(err);\n    }\n  });\n\n\n  app.post('/api/users/update/:id', async (req, res, next) => {\n\n    try {\n      const { id } = req.params;\n      const { name, email, password, date, type, about_me, experience, adress } = req.body;\n      const result = await controller3.updateUsers(id, {\n        name, email, password, date, type, about_me, experience, adress\n\n      });\n      res.json({ success: true, result });\n      return (result);\n    } catch (err) {\n      next(err);\n    }\n  });\n  ////////////////projects\n\n  app.post('/projects/create', async (req, res, next) => {\n    try {\n      const { users_id, title } = req.body;\n      const result = await controller4.createproject({ users_id, title });\n      res.json({ done: true, result });\n    } catch (err) {\n      next(err);\n    }\n  });\n\n\n\n\n\n\n\n  app.post('/api/login', async (req, res) => {\n    console.log(\"here\")\n    const user = {\n      first_name: req.body.first_name,\n      password: req.body.password\n    }\n    console.log(user)\n    const check = await controller3.findUser(user);\n    console.log(check)\n\n    if (check) {\n      jwt.sign({ user }, 'secretkey', { expiresIn: '3000s' }, (err, token) => {\n\n        res.json({\n          token,\n          user\n        });\n      });\n    }\n    else\n      res.json({\n        success: false\n      });\n  });\n\n  /**\n   * Route that returns a list of contacts\n   * @module contacts/list\n   * @param {Express.Request} req - request\n   * @param {Express.Response} res - response \n   * @return {json} rows - array of contacts\n   */\n\n  app.post('/api/posts', verifyToken, (req, res) => {\n    console.log(req.token);\n    //const text = req.body.text\n    // console.log(token);\n    jwt.verify(req.token, 'secretkey', (err, authData) => {\n      if (err) {\n        res.json({\n          message: \"not verified\",\n          err\n        })\n        //res.sendStatus(403);\n\n      } else {\n        //const result = await controller3.addUser(text)\n\n        res.json({\n          message: \"verified\",\n          authData\n        });\n      }\n    })\n  });\n\n\n\n  app.listen(8080, () => {\n    console.log(\"server listening on port 8080\");\n  });\n};\nstart();\n//export default app;\nmodule.exports = app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570801201623
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/belance/back-end/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/belance/back-end\",\"filename\":\"/home/haidara/Documents/belance/back-end/src/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/belance/back-end",
      "filename": "/home/haidara/Documents/belance/back-end/src/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/belance/back-end/src/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/belance/back-end/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/belance/back-end/src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _httpErrors = _interopRequireDefault(require(\"http-errors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// import cookieParser from 'cookie-parser' // parses cookies\n// parses sessions\n// import favicon from 'serve-favicon' // serves favicon\n//import cors from 'cors' // allows cross-domain requests\n// better JS errors\n//import path from 'path'\nvar bodyParser = require('body-parser');\n\nvar app = (0, _express[\"default\"])(); // create a new app\n\nvar IS_PRODUCTION = app.get('env') === 'production';\n\nif (IS_PRODUCTION) {\n  app.set('trust proxy', 1); // secures the app if it is running behind Nginx/Apache/simila\n} //app.use(cors()); // allows cross domain requests\n\n\napp.use(_express[\"default\"].json()); // allows POST requests with JSON\n\napp.use(_express[\"default\"].urlencoded({\n  extended: false\n})); // allows POST requests with GET-like parameters\n//app.use(cookieParser()); // Parses cookies\n// app.use(favicon(path.join(__dirname, '../public', 'favicon.ico'))) // <-- location of favicon\n//app.use(express.static(path.join(__dirname, '../public'))); // <-- location of public dir\n\napp.use(bodyParser.json());\napp.use((0, _expressSession[\"default\"])({\n  // handles sessions\n  secret: 'keyboard cat',\n  // <-- this should be a secret phrase\n  cookie: {\n    secure: IS_PRODUCTION\n  },\n  // <-- secure only in production\n  resave: true,\n  saveUninitialized: true\n}));\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJib2R5UGFyc2VyIiwicmVxdWlyZSIsImFwcCIsIklTX1BST0RVQ1RJT04iLCJnZXQiLCJzZXQiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInNlY3JldCIsImNvb2tpZSIsInNlY3VyZSIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUM7O0FBR0Q7Ozs7QUFKQTtBQUN1QztBQUN2QztBQUNBO0FBQ3NDO0FBQ3RDO0FBQ0EsSUFBSUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUF4Qjs7QUFFQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVosQyxDQUF1Qjs7QUFFdkIsSUFBTUMsYUFBYSxHQUFHRCxHQUFHLENBQUNFLEdBQUosQ0FBUSxLQUFSLE1BQW1CLFlBQXpDOztBQUVBLElBQUlELGFBQUosRUFBbUI7QUFDakJELEVBQUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLGFBQVIsRUFBdUIsQ0FBdkIsRUFEaUIsQ0FDUztBQUMzQixDLENBQ0Q7OztBQUNBSCxHQUFHLENBQUNJLEdBQUosQ0FBUUMsb0JBQVFDLElBQVIsRUFBUixFLENBQXlCOztBQUN6Qk4sR0FBRyxDQUFDSSxHQUFKLENBQVFDLG9CQUFRRSxVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQW5CLENBQVIsRSxDQUFrRDtBQUNsRDtBQUNBO0FBQ0E7O0FBQ0FSLEdBQUcsQ0FBQ0ksR0FBSixDQUFRTixVQUFVLENBQUNRLElBQVgsRUFBUjtBQUNBTixHQUFHLENBQUNJLEdBQUosQ0FBUSxnQ0FBUTtBQUFFO0FBQ2hCSyxFQUFBQSxNQUFNLEVBQUUsY0FETTtBQUNVO0FBQ3hCQyxFQUFBQSxNQUFNLEVBQUU7QUFBRUMsSUFBQUEsTUFBTSxFQUFFVjtBQUFWLEdBRk07QUFFcUI7QUFDbkNXLEVBQUFBLE1BQU0sRUFBRSxJQUhNO0FBSWRDLEVBQUFBLGlCQUFpQixFQUFFO0FBSkwsQ0FBUixDQUFSO2VBUWViLEciLCJzb3VyY2VSb290IjoiL2hvbWUvaGFpZGFyYS9Eb2N1bWVudHMvYmVsYW5jZS9iYWNrLWVuZC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuLy8gaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tICdjb29raWUtcGFyc2VyJyAvLyBwYXJzZXMgY29va2llc1xuIGltcG9ydCBzZXNzaW9uIGZyb20gJ2V4cHJlc3Mtc2Vzc2lvbicgLy8gcGFyc2VzIHNlc3Npb25zXG4vLyBpbXBvcnQgZmF2aWNvbiBmcm9tICdzZXJ2ZS1mYXZpY29uJyAvLyBzZXJ2ZXMgZmF2aWNvblxuLy9pbXBvcnQgY29ycyBmcm9tICdjb3JzJyAvLyBhbGxvd3MgY3Jvc3MtZG9tYWluIHJlcXVlc3RzXG5pbXBvcnQgY3JlYXRlRXJyb3IgZnJvbSAnaHR0cC1lcnJvcnMnIC8vIGJldHRlciBKUyBlcnJvcnNcbi8vaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcbnZhciBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpOyAvLyBjcmVhdGUgYSBuZXcgYXBwXG5cbmNvbnN0IElTX1BST0RVQ1RJT04gPSBhcHAuZ2V0KCdlbnYnKSA9PT0gJ3Byb2R1Y3Rpb24nXG5cbmlmIChJU19QUk9EVUNUSU9OKSB7XG4gIGFwcC5zZXQoJ3RydXN0IHByb3h5JywgMSkgLy8gc2VjdXJlcyB0aGUgYXBwIGlmIGl0IGlzIHJ1bm5pbmcgYmVoaW5kIE5naW54L0FwYWNoZS9zaW1pbGFcbn1cbi8vYXBwLnVzZShjb3JzKCkpOyAvLyBhbGxvd3MgY3Jvc3MgZG9tYWluIHJlcXVlc3RzXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTsgLy8gYWxsb3dzIFBPU1QgcmVxdWVzdHMgd2l0aCBKU09OXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7IC8vIGFsbG93cyBQT1NUIHJlcXVlc3RzIHdpdGggR0VULWxpa2UgcGFyYW1ldGVyc1xuLy9hcHAudXNlKGNvb2tpZVBhcnNlcigpKTsgLy8gUGFyc2VzIGNvb2tpZXNcbi8vIGFwcC51c2UoZmF2aWNvbihwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vcHVibGljJywgJ2Zhdmljb24uaWNvJykpKSAvLyA8LS0gbG9jYXRpb24gb2YgZmF2aWNvblxuLy9hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9wdWJsaWMnKSkpOyAvLyA8LS0gbG9jYXRpb24gb2YgcHVibGljIGRpclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKHNlc3Npb24oeyAvLyBoYW5kbGVzIHNlc3Npb25zXG4gIHNlY3JldDogJ2tleWJvYXJkIGNhdCcsIC8vIDwtLSB0aGlzIHNob3VsZCBiZSBhIHNlY3JldCBwaHJhc2VcbiAgY29va2llOiB7IHNlY3VyZTogSVNfUFJPRFVDVElPTiB9LCAvLyA8LS0gc2VjdXJlIG9ubHkgaW4gcHJvZHVjdGlvblxuICByZXNhdmU6IHRydWUsXG4gIHNhdmVVbmluaXRpYWxpemVkOiB0cnVlXG59KSlcblxuXG5leHBvcnQgZGVmYXVsdCBhcHA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "app",
        "IS_PRODUCTION",
        "get",
        "set",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "secret",
        "cookie",
        "secure",
        "resave",
        "saveUninitialized"
      ],
      "mappings": ";;;;;;;AAAA;;AAEC;;AAGD;;;;AAJA;AACuC;AACvC;AACA;AACsC;AACtC;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AAEA,IAAMC,GAAG,GAAG,0BAAZ,C,CAAuB;;AAEvB,IAAMC,aAAa,GAAGD,GAAG,CAACE,GAAJ,CAAQ,KAAR,MAAmB,YAAzC;;AAEA,IAAID,aAAJ,EAAmB;AACjBD,EAAAA,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,CAAvB,EADiB,CACS;AAC3B,C,CACD;;;AACAH,GAAG,CAACI,GAAJ,CAAQC,oBAAQC,IAAR,EAAR,E,CAAyB;;AACzBN,GAAG,CAACI,GAAJ,CAAQC,oBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAAkD;AAClD;AACA;AACA;;AACAR,GAAG,CAACI,GAAJ,CAAQN,UAAU,CAACQ,IAAX,EAAR;AACAN,GAAG,CAACI,GAAJ,CAAQ,gCAAQ;AAAE;AAChBK,EAAAA,MAAM,EAAE,cADM;AACU;AACxBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAEV;AAAV,GAFM;AAEqB;AACnCW,EAAAA,MAAM,EAAE,IAHM;AAIdC,EAAAA,iBAAiB,EAAE;AAJL,CAAR,CAAR;eAQeb,G",
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src",
      "sourcesContent": [
        "import express from 'express'\n// import cookieParser from 'cookie-parser' // parses cookies\n import session from 'express-session' // parses sessions\n// import favicon from 'serve-favicon' // serves favicon\n//import cors from 'cors' // allows cross-domain requests\nimport createError from 'http-errors' // better JS errors\n//import path from 'path'\nvar bodyParser = require('body-parser');\n\nconst app = express(); // create a new app\n\nconst IS_PRODUCTION = app.get('env') === 'production'\n\nif (IS_PRODUCTION) {\n  app.set('trust proxy', 1) // secures the app if it is running behind Nginx/Apache/simila\n}\n//app.use(cors()); // allows cross domain requests\napp.use(express.json()); // allows POST requests with JSON\napp.use(express.urlencoded({ extended: false })); // allows POST requests with GET-like parameters\n//app.use(cookieParser()); // Parses cookies\n// app.use(favicon(path.join(__dirname, '../public', 'favicon.ico'))) // <-- location of favicon\n//app.use(express.static(path.join(__dirname, '../public'))); // <-- location of public dir\napp.use(bodyParser.json());\napp.use(session({ // handles sessions\n  secret: 'keyboard cat', // <-- this should be a secret phrase\n  cookie: { secure: IS_PRODUCTION }, // <-- secure only in production\n  resave: true,\n  saveUninitialized: true\n}))\n\n\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570786667547
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/belance/back-end/src/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/belance/back-end\",\"filename\":\"/home/haidara/Documents/belance/back-end/src/db/gallery_videos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/belance/back-end",
      "filename": "/home/haidara/Documents/belance/back-end/src/db/gallery_videos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/belance/back-end/src/db/gallery_videos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/belance/back-end/src/db/gallery_videos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
        "sourceFileName": "gallery_videos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nvar _sqlTemplateStrings = _interopRequireDefault(require(\"sql-template-strings\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\" WHERE id = \", \"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"SELECT id AS id, link_url  FROM gallery_videos\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n/**\n * returns a date formatted like `YYYY-MM-DD HH:mm:ss.sss`, suitable for sqlite\n **/\nvar nowForSQLite = function nowForSQLite() {\n  return new Date().toISOString().replace('T', ' ').replace('Z', '');\n};\n/**\n * Joins multiple statements. Useful for `WHERE x = 1 AND y = 2`, where number of arguments is variable.\n * Usage:\n * ```js\n * joinSQLStatementKeys( [\"id\", \"link_url\"], {  link_url=\"Z\"}, \", \")\n * ```\n * Will return an SQL statement corresponding to the string:\n * ```js\n * link_url=\"Z\"\n * ```\n * @param {Array} keys an array of strings representing the properties you want to join \n * @param {Object} values an object containing the values \n * @param {string} delimiter a string to join the parts with\n * @param {string} keyValueSeparator a string to join the parts with\n * @returns {Statement} an SQL Statement object\n */\n\n\nvar joinSQLStatementKeys = function joinSQLStatementKeys(keys, values, delimiter) {\n  var keyValueSeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '=';\n  return keys.map(function (propName) {\n    var value = values[propName];\n\n    if (value !== null && typeof value !== \"undefined\") {\n      return (0, _sqlTemplateStrings[\"default\"])(_templateObject()).append(propName).append(keyValueSeparator).append((0, _sqlTemplateStrings[\"default\"])(_templateObject2(), value));\n    }\n\n    return false;\n  }).filter(Boolean).reduce(function (prev, curr) {\n    return prev.append(delimiter).append(curr);\n  });\n};\n\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2() {\n    var db, getgallery_vidoes, controller;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(process.env.NODE_ENV === \"test\")) {\n              _context2.next = 6;\n              break;\n            }\n\n            _context2.next = 3;\n            return _sqlite[\"default\"].open(\"./db-test.sqlite\");\n\n          case 3:\n            _context2.t0 = _context2.sent;\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.next = 8;\n            return _sqlite[\"default\"].open(\"../../harakat.sqlite3\");\n\n          case 8:\n            _context2.t0 = _context2.sent;\n\n          case 9:\n            db = _context2.t0;\n\n            //await db.migrate({ force: 'last' })\n\n            /**\n             * retrieves the contacts from the database\n             * @function getContactsList\n             * @param {string} orderBy an optional string that is either \"name\" or \"email\"\n             * @returns {array} the list of contacts\n             */\n            getgallery_vidoes =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(props) {\n                var link_url, id, stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        link_url = props.link_url, id = props.id;\n                        _context.prev = 1;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject3());\n\n                        if (id) {\n                          stmt.append((0, _sqlTemplateStrings[\"default\"])(_templateObject4(), id));\n                        }\n\n                        _context.t0 = orderby;\n                        _context.next = _context.t0 === \"link_url\" ? 7 : 10;\n                        break;\n\n                      case 7:\n                        stmt += \" Order by name\";\n                        return _context.abrupt(\"break\", 11);\n\n                      case 10:\n                        return _context.abrupt(\"break\", 11);\n\n                      case 11:\n                        _context.next = 13;\n                        return db.all(stmt);\n\n                      case 13:\n                        rows = _context.sent;\n\n                        if (!(rows.length === 0)) {\n                          _context.next = 16;\n                          break;\n                        }\n\n                        throw new Error(\"no contacts found!\");\n\n                      case 16:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 19:\n                        _context.prev = 19;\n                        _context.t1 = _context[\"catch\"](1);\n                        throw new Error(\"could not retrieve list!\");\n\n                      case 22:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 19]]);\n              }));\n\n              return function getgallery_vidoes(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getgallery_vidoes: getgallery_vidoes\n            };\n            return _context2.abrupt(\"return\", controller);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnlfdmlkZW9zLmpzIl0sIm5hbWVzIjpbIm5vd0ZvclNRTGl0ZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInJlcGxhY2UiLCJqb2luU1FMU3RhdGVtZW50S2V5cyIsImtleXMiLCJ2YWx1ZXMiLCJkZWxpbWl0ZXIiLCJrZXlWYWx1ZVNlcGFyYXRvciIsIm1hcCIsInByb3BOYW1lIiwidmFsdWUiLCJhcHBlbmQiLCJTUUwiLCJmaWx0ZXIiLCJCb29sZWFuIiwicmVkdWNlIiwicHJldiIsImN1cnIiLCJpbml0aWFsaXplRGF0YWJhc2UiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJzcWxpdGUiLCJvcGVuIiwiZGIiLCJnZXRnYWxsZXJ5X3ZpZG9lcyIsInByb3BzIiwibGlua191cmwiLCJpZCIsInN0bXQiLCJvcmRlcmJ5IiwiYWxsIiwicm93cyIsImxlbmd0aCIsIkVycm9yIiwiY29udHJvbGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdBOzs7QUFHQSxJQUFNQSxZQUFZLEdBQUcsU0FBZkEsWUFBZTtBQUFBLFNBQU0sSUFBSUMsSUFBSixHQUFXQyxXQUFYLEdBQXlCQyxPQUF6QixDQUFpQyxHQUFqQyxFQUFxQyxHQUFyQyxFQUEwQ0EsT0FBMUMsQ0FBa0QsR0FBbEQsRUFBc0QsRUFBdEQsQ0FBTjtBQUFBLENBQXJCO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQSxJQUFNQyxvQkFBb0IsR0FBRyxTQUF2QkEsb0JBQXVCLENBQUNDLElBQUQsRUFBT0MsTUFBUCxFQUFlQyxTQUFmLEVBQXFEO0FBQUEsTUFBMUJDLGlCQUEwQix1RUFBUixHQUFRO0FBQ2hGLFNBQU9ILElBQUksQ0FDUkksR0FESSxDQUNBLFVBQUFDLFFBQVEsRUFBSTtBQUNmLFFBQU1DLEtBQUssR0FBR0wsTUFBTSxDQUFDSSxRQUFELENBQXBCOztBQUNBLFFBQUlDLEtBQUssS0FBSyxJQUFWLElBQWtCLE9BQU9BLEtBQVAsS0FBaUIsV0FBdkMsRUFBb0Q7QUFDbEQsYUFBTyx1REFBTUMsTUFBTixDQUFhRixRQUFiLEVBQXVCRSxNQUF2QixDQUE4QkosaUJBQTlCLEVBQWlESSxNQUFqRCxLQUF3REMsOEJBQXhELHNCQUE4REYsS0FBOUQsRUFBUDtBQUNEOztBQUNELFdBQU8sS0FBUDtBQUNELEdBUEksRUFPRkcsTUFQRSxDQU9LQyxPQVBMLEVBUUpDLE1BUkksQ0FRRyxVQUFDQyxJQUFELEVBQU9DLElBQVA7QUFBQSxXQUFnQkQsSUFBSSxDQUFDTCxNQUFMLENBQVlMLFNBQVosRUFBdUJLLE1BQXZCLENBQThCTSxJQUE5QixDQUFoQjtBQUFBLEdBUkgsQ0FBUDtBQVNELENBVkQ7O0FBZUEsSUFBTUMsa0JBQWtCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxrQkFDZEMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBd0IsTUFEVjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQUN3QkMsbUJBQU9DLElBQVAsQ0FBWSxrQkFBWixDQUR4Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsbUJBQzhERCxtQkFBT0MsSUFBUCxDQUFZLHVCQUFaLENBRDlEOztBQUFBO0FBQUE7O0FBQUE7QUFDbkJDLFlBQUFBLEVBRG1COztBQUcxQjs7QUFDQzs7Ozs7O0FBT01DLFlBQUFBLGlCQVhtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBV0MsaUJBQU1DLEtBQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2pCQyx3QkFBQUEsUUFEaUIsR0FDREQsS0FEQyxDQUNqQkMsUUFEaUIsRUFDUEMsRUFETyxHQUNERixLQURDLENBQ1BFLEVBRE87QUFBQTtBQUlwQkMsd0JBQUFBLElBSm9CLE9BSWJqQiw4QkFKYTs7QUFLeEIsNEJBQUdnQixFQUFILEVBQ0E7QUFDRUMsMEJBQUFBLElBQUksQ0FBQ2xCLE1BQUwsS0FBWUMsOEJBQVosc0JBQThCZ0IsRUFBOUI7QUFDRDs7QUFSdUIsc0NBVWhCRSxPQVZnQjtBQUFBLHdEQVdqQixVQVhpQjtBQUFBOztBQUFBO0FBWXBCRCx3QkFBQUEsSUFBSSxJQUFJLGdCQUFSO0FBWm9COztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLCtCQW1CTEwsRUFBRSxDQUFDTyxHQUFILENBQU9GLElBQVAsQ0FuQks7O0FBQUE7QUFtQmxCRyx3QkFBQUEsSUFuQmtCOztBQUFBLDhCQW9CckJBLElBQUksQ0FBQ0MsTUFBTCxLQUFnQixDQXBCSztBQUFBO0FBQUE7QUFBQTs7QUFBQSw4QkFzQmhCLElBQUlDLEtBQUosQ0FBVSxvQkFBVixDQXRCZ0I7O0FBQUE7QUFBQSx5REF3QmpCRixJQXhCaUI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsOEJBMkJoQixJQUFJRSxLQUFKLENBQVUsMEJBQVYsQ0EzQmdCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBWEQ7O0FBQUEsOEJBV25CVCxpQkFYbUI7QUFBQTtBQUFBO0FBQUE7O0FBMkNuQlUsWUFBQUEsVUEzQ21CLEdBMkNOO0FBQ2pCVixjQUFBQSxpQkFBaUIsRUFBakJBO0FBRGlCLGFBM0NNO0FBQUEsOENBNkNsQlUsVUE3Q2tCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWxCakIsa0JBQWtCO0FBQUE7QUFBQTtBQUFBLEdBQXhCOztlQStDZUEsa0IiLCJzb3VyY2VSb290IjoiL2hvbWUvaGFpZGFyYS9Eb2N1bWVudHMvYmVsYW5jZS9iYWNrLWVuZC9zcmMvZGIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3FsaXRlIGZyb20gXCJzcWxpdGVcIjtcbmltcG9ydCBTUUwgZnJvbSBcInNxbC10ZW1wbGF0ZS1zdHJpbmdzXCI7XG5cblxuLyoqXG4gKiByZXR1cm5zIGEgZGF0ZSBmb3JtYXR0ZWQgbGlrZSBgWVlZWS1NTS1ERCBISDptbTpzcy5zc3NgLCBzdWl0YWJsZSBmb3Igc3FsaXRlXG4gKiovXG5jb25zdCBub3dGb3JTUUxpdGUgPSAoKSA9PiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkucmVwbGFjZSgnVCcsJyAnKS5yZXBsYWNlKCdaJywnJylcbi8qKlxuICogSm9pbnMgbXVsdGlwbGUgc3RhdGVtZW50cy4gVXNlZnVsIGZvciBgV0hFUkUgeCA9IDEgQU5EIHkgPSAyYCwgd2hlcmUgbnVtYmVyIG9mIGFyZ3VtZW50cyBpcyB2YXJpYWJsZS5cbiAqIFVzYWdlOlxuICogYGBganNcbiAqIGpvaW5TUUxTdGF0ZW1lbnRLZXlzKCBbXCJpZFwiLCBcImxpbmtfdXJsXCJdLCB7ICBsaW5rX3VybD1cIlpcIn0sIFwiLCBcIilcbiAqIGBgYFxuICogV2lsbCByZXR1cm4gYW4gU1FMIHN0YXRlbWVudCBjb3JyZXNwb25kaW5nIHRvIHRoZSBzdHJpbmc6XG4gKiBgYGBqc1xuICogbGlua191cmw9XCJaXCJcbiAqIGBgYFxuICogQHBhcmFtIHtBcnJheX0ga2V5cyBhbiBhcnJheSBvZiBzdHJpbmdzIHJlcHJlc2VudGluZyB0aGUgcHJvcGVydGllcyB5b3Ugd2FudCB0byBqb2luIFxuICogQHBhcmFtIHtPYmplY3R9IHZhbHVlcyBhbiBvYmplY3QgY29udGFpbmluZyB0aGUgdmFsdWVzIFxuICogQHBhcmFtIHtzdHJpbmd9IGRlbGltaXRlciBhIHN0cmluZyB0byBqb2luIHRoZSBwYXJ0cyB3aXRoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5VmFsdWVTZXBhcmF0b3IgYSBzdHJpbmcgdG8gam9pbiB0aGUgcGFydHMgd2l0aFxuICogQHJldHVybnMge1N0YXRlbWVudH0gYW4gU1FMIFN0YXRlbWVudCBvYmplY3RcbiAqL1xuY29uc3Qgam9pblNRTFN0YXRlbWVudEtleXMgPSAoa2V5cywgdmFsdWVzLCBkZWxpbWl0ZXIgLCBrZXlWYWx1ZVNlcGFyYXRvcj0nPScpID0+IHtcbiAgcmV0dXJuIGtleXNcbiAgICAubWFwKHByb3BOYW1lID0+IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gdmFsdWVzW3Byb3BOYW1lXTtcbiAgICAgIGlmICh2YWx1ZSAhPT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIFNRTGBgLmFwcGVuZChwcm9wTmFtZSkuYXBwZW5kKGtleVZhbHVlU2VwYXJhdG9yKS5hcHBlbmQoU1FMYCR7dmFsdWV9YCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSkuZmlsdGVyKEJvb2xlYW4pXG4gICAgLnJlZHVjZSgocHJldiwgY3VycikgPT4gcHJldi5hcHBlbmQoZGVsaW1pdGVyKS5hcHBlbmQoY3VycikpO1xufTtcblxuXG5cblxuY29uc3QgaW5pdGlhbGl6ZURhdGFiYXNlID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBkYiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PVwidGVzdFwiPyBhd2FpdCBzcWxpdGUub3BlbihcIi4vZGItdGVzdC5zcWxpdGVcIik6YXdhaXQgc3FsaXRlLm9wZW4oXCIuLi8uLi9oYXJha2F0LnNxbGl0ZTNcIik7XG4gIFxuIC8vYXdhaXQgZGIubWlncmF0ZSh7IGZvcmNlOiAnbGFzdCcgfSlcbiAgLyoqXG4gICAqIHJldHJpZXZlcyB0aGUgY29udGFjdHMgZnJvbSB0aGUgZGF0YWJhc2VcbiAgICogQGZ1bmN0aW9uIGdldENvbnRhY3RzTGlzdFxuICAgKiBAcGFyYW0ge3N0cmluZ30gb3JkZXJCeSBhbiBvcHRpb25hbCBzdHJpbmcgdGhhdCBpcyBlaXRoZXIgXCJuYW1lXCIgb3IgXCJlbWFpbFwiXG4gICAqIEByZXR1cm5zIHthcnJheX0gdGhlIGxpc3Qgb2YgY29udGFjdHNcbiAgICovXG5cbiAgY29uc3QgZ2V0Z2FsbGVyeV92aWRvZXMgPSBhc3luYyBwcm9wcyA9PiB7XG4gICAgY29uc3Qge2xpbmtfdXJsLCBpZH0gPSBwcm9wcztcbiAgICAgXG4gICB0cnkge1xuICAgIGxldCBzdG10ID0gU1FMYFNFTEVDVCBpZCBBUyBpZCwgbGlua191cmwgIEZST00gZ2FsbGVyeV92aWRlb3NgO1xuICAgIGlmKGlkKVxuICAgIHtcbiAgICAgIHN0bXQuYXBwZW5kKFNRTGAgV0hFUkUgaWQgPSAke2lkfWApO1xuICAgIH1cbiAgICBcbiAgICBzd2l0Y2ggKG9yZGVyYnkpIHtcbiAgICAgIGNhc2UgXCJsaW5rX3VybFwiOlxuICAgICAgICBzdG10ICs9IFwiIE9yZGVyIGJ5IG5hbWVcIjtcbiAgICAgICAgYnJlYWs7XG4gICAgIFxuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBjb25zdCByb3dzID0gYXdhaXQgZGIuYWxsKHN0bXQpO1xuICAgIGlmKHJvd3MubGVuZ3RoID09PSAwKVxuICAgIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIm5vIGNvbnRhY3RzIGZvdW5kIVwiKVxuICAgIH1cbiAgICByZXR1cm4gcm93czt9XG4gICAgY2F0Y2goZXJyKVxuICAgIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcImNvdWxkIG5vdCByZXRyaWV2ZSBsaXN0IVwiKVxuICAgIH1cbiAgfTtcblxuIFxuICBjb25zdCBjb250cm9sbGVyID0ge1xuICAgIGdldGdhbGxlcnlfdmlkb2VzICB9O1xuICByZXR1cm4gY29udHJvbGxlcjtcbn07XG5leHBvcnQgZGVmYXVsdCBpbml0aWFsaXplRGF0YWJhc2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "gallery_videos.js"
      ],
      "names": [
        "nowForSQLite",
        "Date",
        "toISOString",
        "replace",
        "joinSQLStatementKeys",
        "keys",
        "values",
        "delimiter",
        "keyValueSeparator",
        "map",
        "propName",
        "value",
        "append",
        "SQL",
        "filter",
        "Boolean",
        "reduce",
        "prev",
        "curr",
        "initializeDatabase",
        "process",
        "env",
        "NODE_ENV",
        "sqlite",
        "open",
        "db",
        "getgallery_vidoes",
        "props",
        "link_url",
        "id",
        "stmt",
        "orderby",
        "all",
        "rows",
        "length",
        "Error",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "sourcesContent": [
        "import sqlite from \"sqlite\";\nimport SQL from \"sql-template-strings\";\n\n\n/**\n * returns a date formatted like `YYYY-MM-DD HH:mm:ss.sss`, suitable for sqlite\n **/\nconst nowForSQLite = () => new Date().toISOString().replace('T',' ').replace('Z','')\n/**\n * Joins multiple statements. Useful for `WHERE x = 1 AND y = 2`, where number of arguments is variable.\n * Usage:\n * ```js\n * joinSQLStatementKeys( [\"id\", \"link_url\"], {  link_url=\"Z\"}, \", \")\n * ```\n * Will return an SQL statement corresponding to the string:\n * ```js\n * link_url=\"Z\"\n * ```\n * @param {Array} keys an array of strings representing the properties you want to join \n * @param {Object} values an object containing the values \n * @param {string} delimiter a string to join the parts with\n * @param {string} keyValueSeparator a string to join the parts with\n * @returns {Statement} an SQL Statement object\n */\nconst joinSQLStatementKeys = (keys, values, delimiter , keyValueSeparator='=') => {\n  return keys\n    .map(propName => {\n      const value = values[propName];\n      if (value !== null && typeof value !== \"undefined\") {\n        return SQL``.append(propName).append(keyValueSeparator).append(SQL`${value}`);\n      }\n      return false;\n    }).filter(Boolean)\n    .reduce((prev, curr) => prev.append(delimiter).append(curr));\n};\n\n\n\n\nconst initializeDatabase = async () => {\n  const db = process.env.NODE_ENV ===\"test\"? await sqlite.open(\"./db-test.sqlite\"):await sqlite.open(\"../../harakat.sqlite3\");\n  \n //await db.migrate({ force: 'last' })\n  /**\n   * retrieves the contacts from the database\n   * @function getContactsList\n   * @param {string} orderBy an optional string that is either \"name\" or \"email\"\n   * @returns {array} the list of contacts\n   */\n\n  const getgallery_vidoes = async props => {\n    const {link_url, id} = props;\n     \n   try {\n    let stmt = SQL`SELECT id AS id, link_url  FROM gallery_videos`;\n    if(id)\n    {\n      stmt.append(SQL` WHERE id = ${id}`);\n    }\n    \n    switch (orderby) {\n      case \"link_url\":\n        stmt += \" Order by name\";\n        break;\n     \n        break;\n      default:\n        break;\n    }\n    const rows = await db.all(stmt);\n    if(rows.length === 0)\n    {\n      throw new Error(\"no contacts found!\")\n    }\n    return rows;}\n    catch(err)\n    {\n      throw new Error(\"could not retrieve list!\")\n    }\n  };\n\n \n  const controller = {\n    getgallery_vidoes  };\n  return controller;\n};\nexport default initializeDatabase;"
      ]
    },
    "sourceType": "script",
    "mtime": 1569227607025
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/belance/back-end/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/belance/back-end\",\"filename\":\"/home/haidara/Documents/belance/back-end/src/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/belance/back-end",
      "filename": "/home/haidara/Documents/belance/back-end/src/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/belance/back-end/src/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/belance/back-end/src/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/belance/back-end/src",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIvaG9tZS9oYWlkYXJhL0RvY3VtZW50cy9iZWxhbmNlL2JhY2stZW5kL3NyYyIsInNvdXJjZXNDb250ZW50IjpbXX0=",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src",
      "sourcesContent": []
    },
    "sourceType": "script",
    "mtime": 1568993577185
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/belance/back-end/src/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/belance/back-end\",\"filename\":\"/home/haidara/Documents/belance/back-end/src/db/about_us.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/belance/back-end",
      "filename": "/home/haidara/Documents/belance/back-end/src/db/about_us.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/belance/back-end/src/db/about_us.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/belance/back-end/src/db/about_us.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
        "sourceFileName": "about_us.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nvar _sqlTemplateStrings = _interopRequireDefault(require(\"sql-template-strings\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"SELECT * FROM users WHERE user_id = \", \"\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"SELECT * FROM users WHERE name = \", \" AND password = \", \"\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\" WHERE \"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"UPDATE contacts SET \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"Delete from contacts where contact_id = \", \" AND user_id = \", \" \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"INSERT INTO contacts (name, email, date,image, user_id) Values (\", \", \", \", \", \",\", \", \", \")\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"SELECT * FROM about_us\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n/**\n * returns a date formatted like `YYYY-MM-DD HH:mm:ss.sss`, suitable for sqlite\n **/\nvar nowForSQLite = function nowForSQLite() {\n  return new Date().toISOString().replace('T', ' ').replace('Z', '');\n};\n/**\n * Joins multiple statements. Useful for `WHERE x = 1 AND y = 2`, where number of arguments is variable.\n * Usage:\n * ```js\n * joinSQLStatementKeys( [\"name\", \"age\", \"email\"], { email:\"x@y.c\", name=\"Z\"}, \", \")\n * ```\n * Will return an SQL statement corresponding to the string:\n * ```js\n * name=\"Z\", email=\"x@y.c\"\n * ```\n * @param {Array} keys an array of strings representing the properties you want to join \n * @param {Object} values an object containing the values \n * @param {string} delimiter a string to join the parts with\n * @param {string} keyValueSeparator a string to join the parts with\n * @returns {Statement} an SQL Statement object\n */\n\n\nvar joinSQLStatementKeys = function joinSQLStatementKeys(keys, values, delimiter) {\n  var keyValueSeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '=';\n  return keys.map(function (propName) {\n    var value = values[propName];\n\n    if (value !== null && typeof value !== \"undefined\") {\n      return (0, _sqlTemplateStrings[\"default\"])(_templateObject()).append(propName).append(keyValueSeparator).append((0, _sqlTemplateStrings[\"default\"])(_templateObject2(), value));\n    }\n\n    return false;\n  }).filter(Boolean).reduce(function (prev, curr) {\n    return prev.append(delimiter).append(curr);\n  });\n};\n\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8() {\n    var db, getAbout, getContact, createContact, deleteContact, updateContact, findUser, findUserByID, controller;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return _sqlite[\"default\"].open('./harakat.sqlite');\n\n          case 2:\n            db = _context8.sent;\n\n            //await db.migrate({ force: 'last' })\n\n            /**\n             * retrieves the contacts from the database\n             * @function getContactsList\n             * @param {string} orderBy an optional string that is either \"name\" or \"email\"\n             * @returns {array} the list of contacts\n             */\n            getAbout =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(props) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject3());\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n                        return _context.abrupt(\"return\", rows);\n\n                      case 8:\n                        _context.prev = 8;\n                        _context.t0 = _context[\"catch\"](0);\n                        console.log(_context.t0);\n                        throw new Error(\"could not retrieve list!\");\n\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 8]]);\n              }));\n\n              return function getAbout(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n            /**\n             * retrieves the contacts from the database\n             * @function getContact\n             * @param {number} id id to search by\n             * @returns {array} contact found\n             */\n\n\n            getContact =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var stmt, rows, contact;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        stmt = \"SELECT contact_id AS id, name, email, image FROM contacts where contact_id = \".concat(id);\n                        _context2.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context2.sent;\n                        contact = rows[0];\n\n                        if (contact) {\n                          _context2.next = 10;\n                          break;\n                        }\n\n                        throw new Error(\" contact with id = \".concat(id, \" doesnt exist\"));\n\n                      case 10:\n                        return _context2.abrupt(\"return\", contact);\n\n                      case 11:\n                        _context2.next = 16;\n                        break;\n\n                      case 13:\n                        _context2.prev = 13;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"could not get contact with id = \".concat(id) + _context2.t0.message);\n\n                      case 16:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 13]]);\n              }));\n\n              return function getContact(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createContact =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var name, email, user_id, image, date, result, id;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        name = props.name, email = props.email, user_id = props.user_id, image = props.image;\n                        console.log(\"createC\", props);\n\n                        if (!(!props || !name || !email || !user_id)) {\n                          _context3.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"you must provide a name and email\");\n\n                      case 4:\n                        _context3.prev = 4;\n                        date = nowForSQLite();\n                        _context3.next = 8;\n                        return db.run((0, _sqlTemplateStrings[\"default\"])(_templateObject4(), name, email, date, image, user_id));\n\n                      case 8:\n                        result = _context3.sent;\n                        id = result.stmt.lastID;\n                        return _context3.abrupt(\"return\", id);\n\n                      case 13:\n                        _context3.prev = 13;\n                        _context3.t0 = _context3[\"catch\"](4);\n                        throw new Error(\"cannot insert this combination of name and email\");\n\n                      case 16:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[4, 13]]);\n              }));\n\n              return function createContact(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteContact =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(props) {\n                var id, user_id, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        id = props.id, user_id = props.user_id;\n                        _context4.prev = 1;\n                        _context4.next = 4;\n                        return db.run((0, _sqlTemplateStrings[\"default\"])(_templateObject5(), id, user_id));\n\n                      case 4:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes === 0)) {\n                          _context4.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"could not delete contact with id = \".concat(id, \" or wrong user_id\"));\n\n                      case 7:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 10:\n                        _context4.prev = 10;\n                        _context4.t0 = _context4[\"catch\"](1);\n                        throw new Error(\"could not delete contact\");\n\n                      case 13:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[1, 10]]);\n              }));\n\n              return function deleteContact(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateContact =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var name, email, user_id, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name, email = props.email, user_id = props.user_id;\n\n                        if (!(!props || !(name || email || image) || !user_id)) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"you must provide a name ,image, or an email\");\n\n                      case 3:\n                        _context5.prev = 3;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject6()).append(joinSQLStatementKeys([\"name\", \"email\", \"image\"], props, \", \")).append((0, _sqlTemplateStrings[\"default\"])(_templateObject7())).append(joinSQLStatementKeys([\"contact_id\", \"user_id\"], {\n                          contact_id: id,\n                          user_id: props.user_id\n                        }, \" AND \"));\n                        _context5.next = 7;\n                        return db.run(stmt);\n\n                      case 7:\n                        result = _context5.sent;\n\n                        if (!(result.stmt.changes === 0)) {\n                          _context5.next = 10;\n                          break;\n                        }\n\n                        throw new Error(\"could not update the contact with id = \".concat(id));\n\n                      case 10:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 13:\n                        _context5.prev = 13;\n                        _context5.t0 = _context5[\"catch\"](3);\n                        throw new Error(\"could not update the contact with id = \".concat(id) + _context5.t0.message);\n\n                      case 16:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[3, 13]]);\n              }));\n\n              return function updateContact(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            findUser =\n            /*#__PURE__*/\n            function () {\n              var _ref7 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee6(props) {\n                var username, password, stmt, rows, user;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        username = props.username, password = props.password;\n                        _context6.prev = 1;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject8(), username, password);\n                        _context6.next = 5;\n                        return db.all(stmt);\n\n                      case 5:\n                        rows = _context6.sent;\n                        user = rows[0];\n\n                        if (user) {\n                          _context6.next = 11;\n                          break;\n                        }\n\n                        throw new Error('Incorrect username or password!');\n\n                      case 11:\n                        return _context6.abrupt(\"return\", user);\n\n                      case 12:\n                        _context6.next = 17;\n                        break;\n\n                      case 14:\n                        _context6.prev = 14;\n                        _context6.t0 = _context6[\"catch\"](1);\n                        throw new Error('Could not perform operation!');\n\n                      case 17:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[1, 14]]);\n              }));\n\n              return function findUser(_x7) {\n                return _ref7.apply(this, arguments);\n              };\n            }();\n\n            findUserByID =\n            /*#__PURE__*/\n            function () {\n              var _ref8 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(id) {\n                var stmt, rows, user;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.prev = 0;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject9(), id);\n                        _context7.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context7.sent;\n                        user = rows[0];\n\n                        if (user) {\n                          _context7.next = 10;\n                          break;\n                        }\n\n                        throw new Error('Incorrect user_id!');\n\n                      case 10:\n                        return _context7.abrupt(\"return\", user);\n\n                      case 11:\n                        _context7.next = 16;\n                        break;\n\n                      case 13:\n                        _context7.prev = 13;\n                        _context7.t0 = _context7[\"catch\"](0);\n                        throw new Error(_context7.t0);\n\n                      case 16:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[0, 13]]);\n              }));\n\n              return function findUserByID(_x8) {\n                return _ref8.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getAbout: getAbout,\n              createContact: createContact,\n              deleteContact: deleteContact,\n              updateContact: updateContact,\n              getContact: getContact,\n              findUser: findUser,\n              findUserByID: findUserByID\n            };\n            return _context8.abrupt(\"return\", controller);\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "about_us.js"
      ],
      "names": [
        "nowForSQLite",
        "Date",
        "toISOString",
        "replace",
        "joinSQLStatementKeys",
        "keys",
        "values",
        "delimiter",
        "keyValueSeparator",
        "map",
        "propName",
        "value",
        "append",
        "SQL",
        "filter",
        "Boolean",
        "reduce",
        "prev",
        "curr",
        "initializeDatabase",
        "sqlite",
        "open",
        "db",
        "getAbout",
        "props",
        "stmt",
        "all",
        "rows",
        "console",
        "log",
        "Error",
        "getContact",
        "id",
        "contact",
        "message",
        "createContact",
        "name",
        "email",
        "user_id",
        "image",
        "date",
        "run",
        "result",
        "lastID",
        "deleteContact",
        "changes",
        "updateContact",
        "contact_id",
        "findUser",
        "username",
        "password",
        "user",
        "findUserByID",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "sourcesContent": [
        "import sqlite from \"sqlite\";\nimport SQL from \"sql-template-strings\";\n\n/**\n * returns a date formatted like `YYYY-MM-DD HH:mm:ss.sss`, suitable for sqlite\n **/\nconst nowForSQLite = () => new Date().toISOString().replace('T',' ').replace('Z','')\n/**\n * Joins multiple statements. Useful for `WHERE x = 1 AND y = 2`, where number of arguments is variable.\n * Usage:\n * ```js\n * joinSQLStatementKeys( [\"name\", \"age\", \"email\"], { email:\"x@y.c\", name=\"Z\"}, \", \")\n * ```\n * Will return an SQL statement corresponding to the string:\n * ```js\n * name=\"Z\", email=\"x@y.c\"\n * ```\n * @param {Array} keys an array of strings representing the properties you want to join \n * @param {Object} values an object containing the values \n * @param {string} delimiter a string to join the parts with\n * @param {string} keyValueSeparator a string to join the parts with\n * @returns {Statement} an SQL Statement object\n */\nconst joinSQLStatementKeys = (keys, values, delimiter , keyValueSeparator='=') => {\n  return keys\n    .map(propName => {\n      const value = values[propName];\n      if (value !== null && typeof value !== \"undefined\") {\n        return SQL``.append(propName).append(keyValueSeparator).append(SQL`${value}`);\n      }\n      return false;\n    }).filter(Boolean)\n    .reduce((prev, curr) => prev.append(delimiter).append(curr));\n};\n\n\n\n\nconst initializeDatabase = async () => {\n  const db = await sqlite.open('./harakat.sqlite');\n  \n //await db.migrate({ force: 'last' })\n  /**\n   * retrieves the contacts from the database\n   * @function getContactsList\n   * @param {string} orderBy an optional string that is either \"name\" or \"email\"\n   * @returns {array} the list of contacts\n   */\n\n  const getAbout = async props => {\n\n     \n   try {\n    let stmt = SQL`SELECT * FROM about_us`;\n    const rows = await db.all(stmt);\n    return rows\n}\n    catch(err)\n    {\n        console.log(err)\n      throw new Error(\"could not retrieve list!\")\n    }\n  };\n\n  /**\n   * retrieves the contacts from the database\n   * @function getContact\n   * @param {number} id id to search by\n   * @returns {array} contact found\n   */\n  const getContact = async id => {\n    try {\n      let stmt = `SELECT contact_id AS id, name, email, image FROM contacts where contact_id = ${id}`;\n\n      const rows = await db.all(stmt);\n\n      const contact = rows[0];\n      if (!contact) {\n        throw new Error(` contact with id = ${id} doesnt exist`);\n      } else return contact;\n    } catch (err) {\n      throw new Error(`could not get contact with id = ${id}` + err.message);\n    }\n  };\n\n  const createContact = async props => {\n    const { name, email, user_id , image} = props;\n    console.log(\"createC\", props)\n    if (!props || !name || !email || !user_id) {\n      throw new Error(\"you must provide a name and email\");\n    }\n    try {\n      const date = nowForSQLite();\n      const result = await db.run(\n        SQL`INSERT INTO contacts (name, email, date,image, user_id) Values (${name}, ${email}, ${date},${image}, ${user_id})`\n      );\n      const id = result.stmt.lastID;\n      return id;\n    } catch (err) {\n      throw new Error(\"cannot insert this combination of name and email\");\n    }\n  };\n\n  const deleteContact = async (props)  => {\n    const {id, user_id} = props\n    try {\n      const result = await db.run(\n        SQL`Delete from contacts where contact_id = ${id} AND user_id = ${user_id} `\n      );\n      if (result.stmt.changes === 0) {\n        throw new Error(`could not delete contact with id = ${id} or wrong user_id`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(\"could not delete contact\");\n    }\n  };\n\n  const updateContact = async (id, props) => {\n    const { name, email, user_id } = props;\n    if (!props || !(name || email||image) || !user_id) {\n      throw new Error(\"you must provide a name ,image, or an email\");\n    }\n    try {\n      const stmt = SQL`UPDATE contacts SET `\n      .append( joinSQLStatementKeys( [\"name\", \"email\", \"image\"], props, \", \" ))\n      .append(SQL` WHERE `)\n      .append(joinSQLStatementKeys([\"contact_id\", \"user_id\"],\n          { contact_id:id, user_id:props.user_id }, \" AND \")\n      );\n\n      \n      const result = await db.run(stmt);\n      if (result.stmt.changes === 0) {\n        throw new Error(`could not update the contact with id = ${id}`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(`could not update the contact with id = ${id}` + err.message);\n    }\n  };\n\n  const findUser= async props=>{\n    const {username, password} = props;\n    try{\n      const stmt = SQL`SELECT * FROM users WHERE name = ${username} AND password = ${password}`;\n      const rows = await db.all(stmt);\n      const user = rows[0]\n      if(!user){\n        throw new Error('Incorrect username or password!')\n      }\n      else\n      return user;\n\n    }\n    catch(err)\n    {\n      throw new Error('Could not perform operation!')\n    }\n  }\n\n  const findUserByID = async id =>\n  {\n    try{\n      const stmt = SQL`SELECT * FROM users WHERE user_id = ${id}`;\n      const rows = await db.all(stmt);\n      const user = rows[0]\n      if(!user){\n        throw new Error('Incorrect user_id!')\n      }\n      else\n      return user;\n    }\n    catch(err)\n    {\n      throw new Error(err)\n    }\n  }\n\n  const controller = {\n    getAbout,\n    createContact,\n    deleteContact,\n    updateContact,\n    getContact, \n    findUser,\n    findUserByID\n  };\n  return controller;\n};\nexport default initializeDatabase;"
      ]
    },
    "sourceType": "script",
    "mtime": 1569227607025
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/belance/back-end/src/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/belance/back-end\",\"filename\":\"/home/haidara/Documents/belance/back-end/src/db/categories.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/belance/back-end",
      "filename": "/home/haidara/Documents/belance/back-end/src/db/categories.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/belance/back-end/src/db/categories.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/belance/back-end/src/db/categories.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
        "sourceFileName": "categories.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nvar _sqlTemplateStrings = _interopRequireDefault(require(\"sql-template-strings\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"UPDATE categories SET name=\", \" WHERE id=\", \" \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"Delete from categories where id = \", \" \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"INSERT INTO categories (name) Values (\", \")\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"SELECT * FROM categories\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n/**\n * returns a date formatted like `YYYY-MM-DD HH:mm:ss.sss`, suitable for sqlite\n **/\nvar nowForSQLite = function nowForSQLite() {\n  return new Date().toISOString().replace('T', ' ').replace('Z', '');\n};\n/**\n * Joins multiple statements. Useful for `WHERE x = 1 AND y = 2`, where number of arguments is variable.\n * Usage:\n * ```js\n * joinSQLStatementKeys( [\"name\", \"age\", \"email\"], { email:\"x@y.c\", name=\"Z\"}, \", \")\n * ```\n * Will return an SQL statement corresponding to the string:\n * ```js\n * name=\"Z\", email=\"x@y.c\"\n * ```\n * @param {Array} keys an array of strings representing the properties you want to join \n * @param {Object} values an object containing the values \n * @param {string} delimiter a string to join the parts with\n * @param {string} keyValueSeparator a string to join the parts with\n * @returns {Statement} an SQL Statement object\n */\n\n\nvar joinSQLStatementKeys = function joinSQLStatementKeys(keys, values, delimiter) {\n  var keyValueSeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '=';\n  return keys.map(function (propName) {\n    var value = values[propName];\n\n    if (value !== null && typeof value !== \"undefined\") {\n      return (0, _sqlTemplateStrings[\"default\"])(_templateObject()).append(propName).append(keyValueSeparator).append((0, _sqlTemplateStrings[\"default\"])(_templateObject2(), value));\n    }\n\n    return false;\n  }).filter(Boolean).reduce(function (prev, curr) {\n    return prev.append(delimiter).append(curr);\n  });\n};\n\nvar initializeDatabase_categories =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5() {\n    var db, getCategories, createCategories, deleteCategories, updateCategories, controller2;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _sqlite[\"default\"].open(\"./harakat.sqlite\");\n\n          case 2:\n            db = _context5.sent;\n\n            //await db.migrate({ force: 'last' })\n\n            /**\n             * retrieves the contacts from the database\n             * @function getContactsList\n             * @param {string} orderBy an optional string that is either \"name\" or \"email\"\n             * @returns {array} the list of contacts\n             */\n            getCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(props) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject3());\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n                        return _context.abrupt(\"return\", rows);\n\n                      case 8:\n                        _context.prev = 8;\n                        _context.t0 = _context[\"catch\"](0);\n                        console.log(_context.t0);\n                        throw new Error(\"could not retrieve list!\");\n\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 8]]);\n              }));\n\n              return function getCategories(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n            /**\n             * retrieves the contacts from the database\n             * @function getContact\n             * @param {number} id id to search by\n             * @returns {array} contact found\n             */\n\n\n            createCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(props) {\n                var text, result, id;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        text = props;\n                        console.log(\"createCategoriesWithName\", props);\n\n                        if (!(!props || !text)) {\n                          _context2.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"you must provide a text\");\n\n                      case 4:\n                        _context2.prev = 4;\n                        _context2.next = 7;\n                        return db.run((0, _sqlTemplateStrings[\"default\"])(_templateObject4(), text));\n\n                      case 7:\n                        result = _context2.sent;\n                        id = result.stmt.lastID;\n                        return _context2.abrupt(\"return\", id);\n\n                      case 12:\n                        _context2.prev = 12;\n                        _context2.t0 = _context2[\"catch\"](4);\n                        console.log(_context2.t0);\n                        throw new Error(\"cannot insert this teaxt\");\n\n                      case 16:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[4, 12]]);\n              }));\n\n              return function createCategories(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            deleteCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        id = props;\n                        console.log('>>>>>>>>', id);\n                        _context3.prev = 2;\n                        _context3.next = 5;\n                        return db.run((0, _sqlTemplateStrings[\"default\"])(_templateObject5(), id));\n\n                      case 5:\n                        result = _context3.sent;\n\n                        if (!(result.stmt.changes === 0)) {\n                          _context3.next = 8;\n                          break;\n                        }\n\n                        throw new Error(\"could not delete name with id = \".concat(id));\n\n                      case 8:\n                        return _context3.abrupt(\"return\", true);\n\n                      case 11:\n                        _context3.prev = 11;\n                        _context3.t0 = _context3[\"catch\"](2);\n                        throw new Error(\"could not delete name\");\n\n                      case 14:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[2, 11]]);\n              }));\n\n              return function deleteCategories(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            updateCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(props) {\n                var stmt, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        if (props.id) {\n                          _context4.next = 2;\n                          break;\n                        }\n\n                        throw new Error(\"you must provide an id\");\n\n                      case 2:\n                        _context4.prev = 2;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject6(), props.name, props.id); // .append( joinSQLStatementKeys( [\"text\"], props.text ))\n                        // .append(SQL` WHERE `)\n                        // .append(joinSQLStatementKeys([\"id\"],\n                        //    props.id)\n                        // );\n\n                        _context4.next = 6;\n                        return db.run(stmt);\n\n                      case 6:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes === 0)) {\n                          _context4.next = 10;\n                          break;\n                        }\n\n                        console.log(\"hello===>\");\n                        throw new Error(\"could not update the categories with id = \".concat(props.id));\n\n                      case 10:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 13:\n                        _context4.prev = 13;\n                        _context4.t0 = _context4[\"catch\"](2);\n                        throw new Error(\"could not update the category with id = \".concat(props.id) + _context4.t0.message);\n\n                      case 16:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[2, 13]]);\n              }));\n\n              return function updateCategories(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }(); // const findUser = async props => {\n            //   const { username, password } = props;\n            //   try {\n            //     const stmt = SQL`SELECT * FROM users WHERE name = ${username} AND password = ${password}`;\n            //     const rows = await db.all(stmt);\n            //     const user = rows[0]\n            //     if (!user) {\n            //       throw new Error('Incorrect username or password!')\n            //     }\n            //     else\n            //       return user;\n            //   }\n            //   catch (err) {\n            //     throw new Error('Could not perform operation!')\n            //   }\n            // }\n            // const findUserByID = async id => {\n            //   try {\n            //     const stmt = SQL`SELECT * FROM users WHERE name = ${id}`;\n            //     const rows = await db.all(stmt);\n            //     const user = rows[0]\n            //     if (!user) {\n            //       throw new Error('Incorrect name!')\n            //     }\n            //     else\n            //       return user;\n            //   }\n            //   catch (err) {\n            //     throw new Error(err)\n            //   }\n            // }\n\n\n            controller2 = {\n              getCategories: getCategories,\n              createCategories: createCategories,\n              deleteCategories: deleteCategories,\n              updateCategories: updateCategories\n            };\n            return _context5.abrupt(\"return\", controller2);\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function initializeDatabase_categories() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase_categories;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "categories.js"
      ],
      "names": [
        "nowForSQLite",
        "Date",
        "toISOString",
        "replace",
        "joinSQLStatementKeys",
        "keys",
        "values",
        "delimiter",
        "keyValueSeparator",
        "map",
        "propName",
        "value",
        "append",
        "SQL",
        "filter",
        "Boolean",
        "reduce",
        "prev",
        "curr",
        "initializeDatabase_categories",
        "sqlite",
        "open",
        "db",
        "getCategories",
        "props",
        "stmt",
        "all",
        "rows",
        "console",
        "log",
        "Error",
        "createCategories",
        "text",
        "run",
        "result",
        "id",
        "lastID",
        "deleteCategories",
        "changes",
        "updateCategories",
        "name",
        "message",
        "controller2"
      ],
      "mappings": "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",
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "sourcesContent": [
        "import sqlite from \"sqlite\";\nimport SQL from \"sql-template-strings\";\n\n/**\n * returns a date formatted like `YYYY-MM-DD HH:mm:ss.sss`, suitable for sqlite\n **/\nconst nowForSQLite = () => new Date().toISOString().replace('T', ' ').replace('Z', '')\n/**\n * Joins multiple statements. Useful for `WHERE x = 1 AND y = 2`, where number of arguments is variable.\n * Usage:\n * ```js\n * joinSQLStatementKeys( [\"name\", \"age\", \"email\"], { email:\"x@y.c\", name=\"Z\"}, \", \")\n * ```\n * Will return an SQL statement corresponding to the string:\n * ```js\n * name=\"Z\", email=\"x@y.c\"\n * ```\n * @param {Array} keys an array of strings representing the properties you want to join \n * @param {Object} values an object containing the values \n * @param {string} delimiter a string to join the parts with\n * @param {string} keyValueSeparator a string to join the parts with\n * @returns {Statement} an SQL Statement object\n */\nconst joinSQLStatementKeys = (keys, values, delimiter, keyValueSeparator = '=') => {\n  return keys\n    .map(propName => {\n      const value = values[propName];\n      if (value !== null && typeof value !== \"undefined\") {\n        return SQL``.append(propName).append(keyValueSeparator).append(SQL`${value}`);\n      }\n      return false;\n    }).filter(Boolean)\n    .reduce((prev, curr) => prev.append(delimiter).append(curr));\n};\n\n\n\n\nconst initializeDatabase_categories = async () => {\n  const db = await sqlite.open(\"./harakat.sqlite\");\n\n  //await db.migrate({ force: 'last' })\n  /**\n   * retrieves the contacts from the database\n   * @function getContactsList\n   * @param {string} orderBy an optional string that is either \"name\" or \"email\"\n   * @returns {array} the list of contacts\n   */\n\n  const getCategories = async props => {\n\n\n    try {\n      let stmt = SQL`SELECT * FROM categories`;\n      const rows = await db.all(stmt);\n      return rows\n    }\n    catch (err) {\n      console.log(err)\n      throw new Error(\"could not retrieve list!\")\n    }\n  };\n\n  /**\n   * retrieves the contacts from the database\n   * @function getContact\n   * @param {number} id id to search by\n   * @returns {array} contact found\n   */\n\n\n  const createCategories = async props => {\n    const text = props;\n    console.log(\"createCategoriesWithName\", props)\n    if (!props || !text) {\n      throw new Error(\"you must provide a text\");\n    }\n    try {\n      // const date = nowForSQLite();\n      const result = await db.run(\n        SQL`INSERT INTO categories (name) Values (${text})`\n      );\n      const id = result.stmt.lastID;\n      return id;\n    } catch (err) {\n      console.log(err)\n      throw new Error(\"cannot insert this teaxt\");\n    }\n  };\n\n  const deleteCategories = async (props) => {\n    const id = props\n    console.log('>>>>>>>>',id)\n    try {\n      const result = await db.run(\n        SQL`Delete from categories where id = ${id} `\n      );\n      if (result.stmt.changes === 0) {\n        throw new Error(`could not delete name with id = ${id}`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(\"could not delete name\");\n    }\n  };\n\n  const updateCategories = async (props) => {\n    if (!props.id )  {\n    \n      throw new Error(\"you must provide an id\");\n    }\n    try {\n      \n      const stmt = SQL`UPDATE categories SET name=${props.name} WHERE id=${props.id} `\n      // .append( joinSQLStatementKeys( [\"text\"], props.text ))\n      // .append(SQL` WHERE `)\n      // .append(joinSQLStatementKeys([\"id\"],\n      //    props.id)\n      // );\n\n      const result = await db.run(stmt);\n      if (result.stmt.changes === 0) {\n        console.log(\"hello===>\")\n        throw new Error(`could not update the categories with id = ${props.id}`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(`could not update the category with id = ${props.id}` + err.message);\n    }\n  };\n\n  // const findUser = async props => {\n  //   const { username, password } = props;\n  //   try {\n  //     const stmt = SQL`SELECT * FROM users WHERE name = ${username} AND password = ${password}`;\n  //     const rows = await db.all(stmt);\n  //     const user = rows[0]\n  //     if (!user) {\n  //       throw new Error('Incorrect username or password!')\n  //     }\n  //     else\n  //       return user;\n\n  //   }\n  //   catch (err) {\n  //     throw new Error('Could not perform operation!')\n  //   }\n  // }\n\n  // const findUserByID = async id => {\n  //   try {\n  //     const stmt = SQL`SELECT * FROM users WHERE name = ${id}`;\n  //     const rows = await db.all(stmt);\n  //     const user = rows[0]\n  //     if (!user) {\n  //       throw new Error('Incorrect name!')\n  //     }\n  //     else\n  //       return user;\n  //   }\n  //   catch (err) {\n  //     throw new Error(err)\n  //   }\n  // }\n\n  const controller2 = {\n    getCategories,\n    createCategories,\n    deleteCategories,\n    updateCategories\n  };\n  return controller2;\n};\nexport default initializeDatabase_categories;"
      ]
    },
    "sourceType": "script",
    "mtime": 1569324209416
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/belance/back-end/src/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/belance/back-end\",\"filename\":\"/home/haidara/Documents/belance/back-end/src/db/users_accounts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/belance/back-end",
      "filename": "/home/haidara/Documents/belance/back-end/src/db/users_accounts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/belance/back-end/src/db/users_accounts.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/belance/back-end/src/db/users_accounts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
        "sourceFileName": "users_accounts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nvar _sqlTemplateStrings = _interopRequireDefault(require(\"sql-template-strings\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"SELECT * FROM users_accounts WHERE first_name = \", \" AND password = \", \"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"SELECT * FROM users_accounts\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n/**\n * returns a date formatted like `YYYY-MM-DD HH:mm:ss.sss`, suitable for sqlite\n **/\nvar nowForSQLite = function nowForSQLite() {\n  return new Date().toISOString().replace('T', ' ').replace('Z', '');\n};\n/**\n * Joins multiple statements. Useful for `WHERE x = 1 AND y = 2`, where number of arguments is variable.\n * Usage:\n * ```js\n * joinSQLStatementKeys( [\"name\", \"age\", \"email\"], { email:\"x@y.c\", name=\"Z\"}, \", \")\n * ```\n * Will return an SQL statement corresponding to the string:\n * ```js\n * name=\"Z\", email=\"x@y.c\"\n * ```\n * @param {Array} keys an array of strings representing the properties you want to join \n * @param {Object} values an object containing the values \n * @param {string} delimiter a string to join the parts with\n * @param {string} keyValueSeparator a string to join the parts with\n * @returns {Statement} an SQL Statement object\n */\n\n\nvar joinSQLStatementKeys = function joinSQLStatementKeys(keys, values, delimiter) {\n  var keyValueSeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '=';\n  return keys.map(function (propName) {\n    var value = values[propName];\n\n    if (value !== null && typeof value !== \"undefined\") {\n      return (0, _sqlTemplateStrings[\"default\"])(_templateObject()).append(propName).append(keyValueSeparator).append((0, _sqlTemplateStrings[\"default\"])(_templateObject2(), value));\n    }\n\n    return false;\n  }).filter(Boolean).reduce(function (prev, curr) {\n    return prev.append(delimiter).append(curr);\n  });\n};\n\nvar initializeUsers_accounts =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4() {\n    var db, getUsers, addUser, findUser, controller3;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _sqlite[\"default\"].open(\"./harakat.sqlite\");\n\n          case 2:\n            db = _context4.sent;\n\n            //await db.migrate({ force: 'last' })\n\n            /**\n             * retrieves the contacts from the database\n             * @function getContactsList\n             * @param {string} orderBy an optional string that is either \"name\" or \"email\"\n             * @returns {array} the list of contacts\n             */\n            getUsers =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(props) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject3());\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n                        return _context.abrupt(\"return\", rows);\n\n                      case 8:\n                        _context.prev = 8;\n                        _context.t0 = _context[\"catch\"](0);\n                        console.log(_context.t0);\n                        throw new Error(\"could not retrieve list!\");\n\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 8]]);\n              }));\n\n              return function getUsers(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            addUser =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(props) {\n                var first_name, last_name, email, password, phone_number, adress, postel_code, city, result, id;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        first_name = props.first_name, last_name = props.last_name, email = props.email, password = props.password, phone_number = props.phone_number, adress = props.adress, postel_code = props.postel_code, city = props.city;\n                        console.log(\"addUsersWithName\", first_name, last_name, email, password, phone_number, adress, postel_code, city);\n\n                        if (!(!props || !first_name || !last_name || !email || !password || !phone_number || !adress || !postel_code || !city)) {\n                          _context2.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"you must fill all fields\");\n\n                      case 4:\n                        _context2.prev = 4;\n                        // const date = nowForSQLite();\n                        console.log(\"INSERT INTO users_accounts (first_name, last_name, email,phone_number password, address, postel_code, city ) Values ( \".concat(first_name, \" , \").concat(last_name, \" , \").concat(email, \" , \").concat(password, \" , \").concat(phone_number, \" , \").concat(adress, \" , \").concat(postel_code, \" , \").concat(city, \")\"));\n                        _context2.next = 8;\n                        return db.run(\"INSERT INTO users_accounts (first_name, last_name, email,phone_number, password, address, postel_code, city ) Values ( '\".concat(first_name, \"' , '\").concat(last_name, \"' , '\").concat(email, \"' , '\").concat(password, \"' , \").concat(phone_number, \" , '\").concat(adress, \"' , \").concat(postel_code, \" , '\").concat(city, \"')\"));\n\n                      case 8:\n                        result = _context2.sent;\n                        id = result.stmt.lastID;\n                        return _context2.abrupt(\"return\", id);\n\n                      case 13:\n                        _context2.prev = 13;\n                        _context2.t0 = _context2[\"catch\"](4);\n                        console.log(_context2.t0);\n                        throw new Error(\"cannot insert this teaxt\");\n\n                      case 17:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[4, 13]]);\n              }));\n\n              return function addUser(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            findUser =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var first_name, password, stmt, rows, user;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        first_name = props.first_name, password = props.password;\n                        _context3.prev = 1;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject4(), first_name, password);\n                        _context3.next = 5;\n                        return db.all(stmt);\n\n                      case 5:\n                        rows = _context3.sent;\n                        user = rows[0];\n\n                        if (user) {\n                          _context3.next = 11;\n                          break;\n                        }\n\n                        throw new Error('Incorrect username or password!');\n\n                      case 11:\n                        return _context3.abrupt(\"return\", user);\n\n                      case 12:\n                        _context3.next = 17;\n                        break;\n\n                      case 14:\n                        _context3.prev = 14;\n                        _context3.t0 = _context3[\"catch\"](1);\n                        throw new Error('Could not perform operation!');\n\n                      case 17:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[1, 14]]);\n              }));\n\n              return function findUser(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n            /**\n             * retrieves the contacts from the database\n             * @function getContact\n             * @param {number} id id to search by\n             * @returns {array} contact found\n             */\n\n\n            controller3 = {\n              getUsers: getUsers,\n              findUser: findUser,\n              addUser: addUser\n            };\n            return _context4.abrupt(\"return\", controller3);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function initializeUsers_accounts() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeUsers_accounts;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users_accounts.js"
      ],
      "names": [
        "nowForSQLite",
        "Date",
        "toISOString",
        "replace",
        "joinSQLStatementKeys",
        "keys",
        "values",
        "delimiter",
        "keyValueSeparator",
        "map",
        "propName",
        "value",
        "append",
        "SQL",
        "filter",
        "Boolean",
        "reduce",
        "prev",
        "curr",
        "initializeUsers_accounts",
        "sqlite",
        "open",
        "db",
        "getUsers",
        "props",
        "stmt",
        "all",
        "rows",
        "console",
        "log",
        "Error",
        "addUser",
        "first_name",
        "last_name",
        "email",
        "password",
        "phone_number",
        "adress",
        "postel_code",
        "city",
        "run",
        "result",
        "id",
        "lastID",
        "findUser",
        "user",
        "controller3"
      ],
      "mappings": "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",
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "sourcesContent": [
        "import sqlite from \"sqlite\";\nimport SQL from \"sql-template-strings\";\n\n/**\n * returns a date formatted like `YYYY-MM-DD HH:mm:ss.sss`, suitable for sqlite\n **/\nconst nowForSQLite = () => new Date().toISOString().replace('T', ' ').replace('Z', '')\n/**\n * Joins multiple statements. Useful for `WHERE x = 1 AND y = 2`, where number of arguments is variable.\n * Usage:\n * ```js\n * joinSQLStatementKeys( [\"name\", \"age\", \"email\"], { email:\"x@y.c\", name=\"Z\"}, \", \")\n * ```\n * Will return an SQL statement corresponding to the string:\n * ```js\n * name=\"Z\", email=\"x@y.c\"\n * ```\n * @param {Array} keys an array of strings representing the properties you want to join \n * @param {Object} values an object containing the values \n * @param {string} delimiter a string to join the parts with\n * @param {string} keyValueSeparator a string to join the parts with\n * @returns {Statement} an SQL Statement object\n */\nconst joinSQLStatementKeys = (keys, values, delimiter, keyValueSeparator = '=') => {\n  return keys\n    .map(propName => {\n      const value = values[propName];\n      if (value !== null && typeof value !== \"undefined\") {\n        return SQL``.append(propName).append(keyValueSeparator).append(SQL`${value}`);\n      }\n      return false;\n    }).filter(Boolean)\n    .reduce((prev, curr) => prev.append(delimiter).append(curr));\n};\n\n\n\n\nconst initializeUsers_accounts = async () => {\n  const db = await sqlite.open(\"./harakat.sqlite\");\n\n  //await db.migrate({ force: 'last' })\n  /**\n   * retrieves the contacts from the database\n   * @function getContactsList\n   * @param {string} orderBy an optional string that is either \"name\" or \"email\"\n   * @returns {array} the list of contacts\n   */\n\n  const getUsers = async props => {\n\n\n    try {\n      let stmt = SQL`SELECT * FROM users_accounts`;\n      const rows = await db.all(stmt);\n      return rows;\n    }\n    catch (err) {\n      console.log(err)\n      throw new Error(\"could not retrieve list!\")\n    }\n  };\n\n\n  const addUser = async (props) => {\n    const { first_name, last_name, email, password, phone_number, adress, postel_code, city } = props;\n    console.log(\"addUsersWithName\",  first_name, last_name, email, password, phone_number, adress, postel_code, city)\n    if (!props || !first_name || !last_name || !email || !password || !phone_number || !adress || !postel_code || !city) {\n      throw new Error(\"you must fill all fields\");\n    }\n    try {\n      // const date = nowForSQLite();\n      console.log(`INSERT INTO users_accounts (first_name, last_name, email,phone_number password, address, postel_code, city ) Values ( ${first_name} , ${last_name} , ${email} , ${password} , ${phone_number} , ${adress} , ${postel_code} , ${city})`\n      )\n      const result = await db.run(\n        `INSERT INTO users_accounts (first_name, last_name, email,phone_number, password, address, postel_code, city ) Values ( '${first_name}' , '${last_name}' , '${email}' , '${password}' , ${phone_number} , '${adress}' , ${postel_code} , '${city}')`\n      );\n      const id = result.stmt.lastID;\n      return id;\n    } catch (err) {\n      console.log(err)\n      throw new Error(\"cannot insert this teaxt\");\n    }\n  };\n\n  const findUser = async props => {\n    const { first_name, password } = props;\n    try {\n      const stmt = SQL`SELECT * FROM users_accounts WHERE first_name = ${first_name} AND password = ${password}`;\n      const rows = await db.all(stmt);\n      const user = rows[0]\n      if (!user) {\n        throw new Error('Incorrect username or password!')\n      }\n      else\n        return user;\n\n    }\n    catch (err) {\n      throw new Error('Could not perform operation!')\n    }\n  }\n\n\n\n\n\n  /**\n   * retrieves the contacts from the database\n   * @function getContact\n   * @param {number} id id to search by\n   * @returns {array} contact found\n   */\n\n\n\n\n\n  const controller3 = {\n    getUsers,\n    findUser,\n    addUser\n\n  };\n  return controller3;\n};\nexport default initializeUsers_accounts;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570699301613
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/belance/back-end/src/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/belance/back-end\",\"filename\":\"/home/haidara/Documents/belance/back-end/src/db/verfiy.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/belance/back-end",
      "filename": "/home/haidara/Documents/belance/back-end/src/db/verfiy.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/belance/back-end/src/db/verfiy.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/belance/back-end/src/db/verfiy.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
        "sourceFileName": "verfiy.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction verifyToken(req, res, next) {\n  // check if beraer is un defined\n  var bearerHeader = req.headers['authorization'];\n\n  if (typeof bearerHeader !== 'undefined') {\n    // split at the space\n    var bearer = bearerHeader.split(' '); // get token from array\n\n    var bearerToken = bearer[1]; //set the token\n\n    req.token = bearerToken; //next middleware\n\n    next();\n  } else {\n    // forbidden\n    res.send(403);\n  }\n}\n\n;\nvar _default = verifyToken;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcmZpeS5qcyJdLCJuYW1lcyI6WyJ2ZXJpZnlUb2tlbiIsInJlcSIsInJlcyIsIm5leHQiLCJiZWFyZXJIZWFkZXIiLCJoZWFkZXJzIiwiYmVhcmVyIiwic3BsaXQiLCJiZWFyZXJUb2tlbiIsInRva2VuIiwic2VuZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBLFNBQVNBLFdBQVQsQ0FBcUJDLEdBQXJCLEVBQTBCQyxHQUExQixFQUErQkMsSUFBL0IsRUFBcUM7QUFFakM7QUFDQSxNQUFNQyxZQUFZLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGVBQVosQ0FBckI7O0FBQ0EsTUFBSSxPQUFPRCxZQUFQLEtBQXdCLFdBQTVCLEVBQXlDO0FBQ3JDO0FBQ0EsUUFBTUUsTUFBTSxHQUFHRixZQUFZLENBQUNHLEtBQWIsQ0FBbUIsR0FBbkIsQ0FBZixDQUZxQyxDQUdyQzs7QUFDQSxRQUFNQyxXQUFXLEdBQUdGLE1BQU0sQ0FBQyxDQUFELENBQTFCLENBSnFDLENBS3JDOztBQUNBTCxJQUFBQSxHQUFHLENBQUNRLEtBQUosR0FBWUQsV0FBWixDQU5xQyxDQVFyQzs7QUFDQUwsSUFBQUEsSUFBSTtBQUNQLEdBVkQsTUFVTztBQUVIO0FBQ0FELElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTLEdBQVQ7QUFDSDtBQUVKOztBQUFBO2VBRWNWLFciLCJzb3VyY2VSb290IjoiL2hvbWUvaGFpZGFyYS9Eb2N1bWVudHMvYmVsYW5jZS9iYWNrLWVuZC9zcmMvZGIiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZnVuY3Rpb24gdmVyaWZ5VG9rZW4ocmVxLCByZXMsIG5leHQpIHtcblxuICAgIC8vIGNoZWNrIGlmIGJlcmFlciBpcyB1biBkZWZpbmVkXG4gICAgY29uc3QgYmVhcmVySGVhZGVyID0gcmVxLmhlYWRlcnNbJ2F1dGhvcml6YXRpb24nXTtcbiAgICBpZiAodHlwZW9mIGJlYXJlckhlYWRlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgLy8gc3BsaXQgYXQgdGhlIHNwYWNlXG4gICAgICAgIGNvbnN0IGJlYXJlciA9IGJlYXJlckhlYWRlci5zcGxpdCgnICcpO1xuICAgICAgICAvLyBnZXQgdG9rZW4gZnJvbSBhcnJheVxuICAgICAgICBjb25zdCBiZWFyZXJUb2tlbiA9IGJlYXJlclsxXTtcbiAgICAgICAgLy9zZXQgdGhlIHRva2VuXG4gICAgICAgIHJlcS50b2tlbiA9IGJlYXJlclRva2VuO1xuXG4gICAgICAgIC8vbmV4dCBtaWRkbGV3YXJlXG4gICAgICAgIG5leHQoKTtcbiAgICB9IGVsc2Uge1xuXG4gICAgICAgIC8vIGZvcmJpZGRlblxuICAgICAgICByZXMuc2VuZCg0MDMpO1xuICAgIH1cblxufTtcblxuZXhwb3J0IGRlZmF1bHQgdmVyaWZ5VG9rZW47Il19",
    "map": {
      "version": 3,
      "sources": [
        "verfiy.js"
      ],
      "names": [
        "verifyToken",
        "req",
        "res",
        "next",
        "bearerHeader",
        "headers",
        "bearer",
        "split",
        "bearerToken",
        "token",
        "send"
      ],
      "mappings": ";;;;;;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAEjC;AACA,MAAMC,YAAY,GAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,CAArB;;AACA,MAAI,OAAOD,YAAP,KAAwB,WAA5B,EAAyC;AACrC;AACA,QAAME,MAAM,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAf,CAFqC,CAGrC;;AACA,QAAMC,WAAW,GAAGF,MAAM,CAAC,CAAD,CAA1B,CAJqC,CAKrC;;AACAL,IAAAA,GAAG,CAACQ,KAAJ,GAAYD,WAAZ,CANqC,CAQrC;;AACAL,IAAAA,IAAI;AACP,GAVD,MAUO;AAEH;AACAD,IAAAA,GAAG,CAACQ,IAAJ,CAAS,GAAT;AACH;AAEJ;;AAAA;eAEcV,W",
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "sourcesContent": [
        "\n\nfunction verifyToken(req, res, next) {\n\n    // check if beraer is un defined\n    const bearerHeader = req.headers['authorization'];\n    if (typeof bearerHeader !== 'undefined') {\n        // split at the space\n        const bearer = bearerHeader.split(' ');\n        // get token from array\n        const bearerToken = bearer[1];\n        //set the token\n        req.token = bearerToken;\n\n        //next middleware\n        next();\n    } else {\n\n        // forbidden\n        res.send(403);\n    }\n\n};\n\nexport default verifyToken;"
      ]
    },
    "sourceType": "script",
    "mtime": 1569506692964
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/belance/back-end/src/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/belance/back-end\",\"filename\":\"/home/haidara/Documents/belance/back-end/src/db/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/belance/back-end",
      "filename": "/home/haidara/Documents/belance/back-end/src/db/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/belance/back-end/src/db/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/belance/back-end/src/db/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nvar _sqlTemplateStrings = _interopRequireDefault(require(\"sql-template-strings\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"SELECT * FROM users WHERE name = \", \" AND password = \", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Delete FROM users where users_id = \", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"SELECT * FROM users\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeUsers =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getUsers, addUser, deleteUsers, updateUsers, findUser, controller3;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open(\"./belance.sqlite\");\n\n          case 2:\n            db = _context6.sent;\n\n            getUsers =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(props) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject());\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n                        return _context.abrupt(\"return\", rows);\n\n                      case 8:\n                        _context.prev = 8;\n                        _context.t0 = _context[\"catch\"](0);\n                        console.log(_context.t0);\n                        throw new Error(\"could not retrieve list!\");\n\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 8]]);\n              }));\n\n              return function getUsers(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            addUser =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(props) {\n                var name, email, password, date, type, about_me, experience, adress, result, id;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        name = props.name, email = props.email, password = props.password, date = props.date, type = props.type, about_me = props.about_me, experience = props.experience, adress = props.adress;\n                        console.log(\"addUsersWithName\", name, email, password, date, type, about_me, experience, adress);\n\n                        if (!(!props || !name || !email || !password || !date || !type || !about_me || !experience || !adress)) {\n                          _context2.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"you must fill all fields\");\n\n                      case 4:\n                        _context2.prev = 4;\n                        _context2.next = 7;\n                        return db.run(\"INSERT INTO users (name,email,password,date,type,about_me,experience,adress ) Values ( '\".concat(name, \"' , '\").concat(email, \"' , '\").concat(password, \"' , '\").concat(date, \"' ,  '\").concat(type, \"' , '\").concat(about_me, \"','\").concat(experience, \"','\").concat(adress, \"')\"));\n\n                      case 7:\n                        result = _context2.sent;\n                        id = result.stmt.lastID;\n                        return _context2.abrupt(\"return\", id);\n\n                      case 12:\n                        _context2.prev = 12;\n                        _context2.t0 = _context2[\"catch\"](4);\n                        console.log(_context2.t0);\n                        throw new Error(\"cannot insert this teaxt\");\n\n                      case 16:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[4, 12]]);\n              }));\n\n              return function addUser(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            deleteUsers =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return db.run((0, _sqlTemplateStrings[\"default\"])(_templateObject2(), id));\n\n                      case 3:\n                        result = _context3.sent;\n\n                        if (!(result.stmt.changes === 0)) {\n                          _context3.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"could not delete user with id = \".concat(id, \" or wrong id\"));\n\n                      case 6:\n                        return _context3.abrupt(\"return\", true);\n\n                      case 9:\n                        _context3.prev = 9;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        throw new Error(\"could not delete the user\");\n\n                      case 12:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 9]]);\n              }));\n\n              return function deleteUsers(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            updateUsers =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id, props) {\n                var name, email, password, date, type, about_me, experience, adress, stmt, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        name = props.name, email = props.email, password = props.password, date = props.date, type = props.type, about_me = props.about_me, experience = props.experience, adress = props.adress;\n                        _context4.prev = 1;\n\n                        if (!(!id || !id || !props || !props)) {\n                          _context4.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"you must provide an id and/or one of the inputs\");\n\n                      case 4:\n                        stmt = \"UPDATE users SET name=(\\\"\".concat(name, \"\\\"), email=(\\\"\").concat(email, \"\\\"), password=(\\\"\").concat(password, \"\\\"), date=(\\\"\").concat(date, \"\\\"), type=(\\\"\").concat(type, \"\\\"), about_me=(\\\"\").concat(about_me, \"\\\"),experience=(\\\"\").concat(experience, \"\\\") , adress=(\\\"\").concat(adress, \"\\\") WHERE users_id=(\").concat(id, \")\");\n                        _context4.next = 7;\n                        return db.all(stmt);\n\n                      case 7:\n                        result = _context4.sent;\n                        return _context4.abrupt(\"return\", result);\n\n                      case 11:\n                        _context4.prev = 11;\n                        _context4.t0 = _context4[\"catch\"](1);\n                        throw new Error(\"Can't update user account\");\n\n                      case 14:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[1, 11]]);\n              }));\n\n              return function updateUsers(_x4, _x5) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            findUser =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(props) {\n                var name, password, stmt, rows, user;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name, password = props.password;\n                        _context5.prev = 1;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject3(), name, password);\n                        _context5.next = 5;\n                        return db.all(stmt);\n\n                      case 5:\n                        rows = _context5.sent;\n                        user = rows[0];\n\n                        if (user) {\n                          _context5.next = 11;\n                          break;\n                        }\n\n                        throw new Error('Incorrect username or password!');\n\n                      case 11:\n                        return _context5.abrupt(\"return\", user);\n\n                      case 12:\n                        _context5.next = 17;\n                        break;\n\n                      case 14:\n                        _context5.prev = 14;\n                        _context5.t0 = _context5[\"catch\"](1);\n                        throw new Error('Could not perform operation!');\n\n                      case 17:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[1, 14]]);\n              }));\n\n              return function findUser(_x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n            /**\n             * retrieves the contacts from the database\n             * @function getContact\n             * @param {number} id id to search by\n             * @returns {array} contact found\n             */\n\n\n            controller3 = {\n              getUsers: getUsers,\n              findUser: findUser,\n              addUser: addUser,\n              deleteUsers: deleteUsers,\n              updateUsers: updateUsers\n            };\n            return _context6.abrupt(\"return\", controller3);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function initializeUsers() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeUsers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "initializeUsers",
        "sqlite",
        "open",
        "db",
        "getUsers",
        "props",
        "stmt",
        "SQL",
        "all",
        "rows",
        "console",
        "log",
        "Error",
        "addUser",
        "name",
        "email",
        "password",
        "date",
        "type",
        "about_me",
        "experience",
        "adress",
        "run",
        "result",
        "id",
        "lastID",
        "deleteUsers",
        "changes",
        "updateUsers",
        "findUser",
        "user",
        "controller3"
      ],
      "mappings": "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",
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "sourcesContent": [
        "import sqlite from \"sqlite\";\nimport SQL from \"sql-template-strings\";\n\n\nconst initializeUsers = async () => {\n  const db = await sqlite.open(\"./belance.sqlite\");\n\n  \n\n  const getUsers = async props => {\n    try {\n      let stmt = SQL`SELECT * FROM users`;\n      const rows = await db.all(stmt);\n      return rows;\n    }\n    catch (err) {\n      console.log(err)\n      throw new Error(\"could not retrieve list!\")\n    }\n  };\n\n\n  const addUser = async (props) => {\n    const { name, email, password, date, type, about_me, experience,adress  } = props;\n    console.log(\"addUsersWithName\",  name, email, password, date, type, about_me, experience,adress)\n    if (!props || !name || !email || !password || !date|| !type||!about_me||!experience||!adress ) {\n      throw new Error(\"you must fill all fields\");\n    }\n    try {\n      // const date = nowForSQLite();\n     // console.log(`INSERT INTO users (first_name, last_name, email,phone_number password, address, postel_code, city ) Values ( ${name} , ${last_name} , ${email} , ${password} , ${phone_number} , ${adress} , ${postel_code} , ${city})`\n     // )\n      const result = await db.run(\n        `INSERT INTO users (name,email,password,date,type,about_me,experience,adress ) Values ( '${name}' , '${email}' , '${password}' , '${date}' ,  '${type}' , '${about_me}','${experience}','${adress}')`\n      );\n      const id = result.stmt.lastID;\n      return id;\n    } catch (err) {\n      console.log(err)\n      throw new Error(\"cannot insert this teaxt\");\n    }\n  };\n\n  const deleteUsers = async (id)  => {\n    try {\n      const result = await db.run(\n        SQL`Delete FROM users where users_id = ${id}`\n      );\n      if (result.stmt.changes === 0) {\n        throw new Error(`could not delete user with id = ${id} or wrong id`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(\"could not delete the user\");\n    }\n  };\n\n\n  const updateUsers = async (id,  props) => {\n    const {name, email, password, date, type, about_me, experience,adress} = props;\n      try {\n    if (!id ||  (!id || !props) || !props) {\n      throw new Error(\"you must provide an id and/or one of the inputs\");\n    }\n    \n      const stmt = `UPDATE users SET name=(\"${name}\"), email=(\"${email}\"), password=(\"${password}\"), date=(\"${date}\"), type=(\"${type}\"), about_me=(\"${about_me}\"),experience=(\"${experience}\") , adress=(\"${adress}\") WHERE users_id=(${id})`;\n      const result = await db.all(stmt);\n      return (result);\n    } catch (err) {\n        throw new Error(\"Can't update user account\")\n    }\n};\n\n  const findUser = async props => {\n    const { name, password } = props;\n    try {\n      const stmt = SQL`SELECT * FROM users WHERE name = ${name} AND password = ${password}`;\n      const rows = await db.all(stmt);\n      const user = rows[0]\n      if (!user) {\n        throw new Error('Incorrect username or password!')\n      }\n      else\n        return user;\n\n    }\n    catch (err) {\n      throw new Error('Could not perform operation!')\n    }\n  }\n\n\n\n\n\n  /**\n   * retrieves the contacts from the database\n   * @function getContact\n   * @param {number} id id to search by\n   * @returns {array} contact found\n   */\n\n\n\n\n\n  const controller3 = {\n    getUsers,\n    findUser,\n    addUser,\n    deleteUsers,\n    updateUsers\n\n  };\n  return controller3;\n};\nexport default initializeUsers;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570797903547
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/belance/back-end/src/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/belance/back-end\",\"filename\":\"/home/haidara/Documents/belance/back-end/src/db/projects.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/belance/back-end",
      "filename": "/home/haidara/Documents/belance/back-end/src/db/projects.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/belance/back-end/src/db/projects.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/belance/back-end/src/db/projects.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
        "sourceFileName": "projects.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nvar _sqlTemplateStrings = _interopRequireDefault(require(\"sql-template-strings\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeProjects =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2() {\n    var db, createproject, controller4;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _sqlite[\"default\"].open(\"./belance.sqlite\");\n\n          case 2:\n            db = _context2.sent;\n\n            createproject =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(props) {\n                var users_id, title, result, id;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        users_id = props.users_id, title = props.title;\n                        console.log(\"CreateProjectWith\", users_id, title);\n\n                        if (!(!props || !users_id || !title)) {\n                          _context.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"you must fill all fields\");\n\n                      case 4:\n                        _context.prev = 4;\n                        _context.next = 7;\n                        return db.run(\"INSERT INTO projects (users_id , title ) Values ( \".concat(users_id, \" , '\").concat(title, \"')\"));\n\n                      case 7:\n                        result = _context.sent;\n                        id = result.stmt.lastID;\n                        return _context.abrupt(\"return\", id);\n\n                      case 12:\n                        _context.prev = 12;\n                        _context.t0 = _context[\"catch\"](4);\n                        console.log(_context.t0);\n                        throw new Error(\"cannot insert this teaxt\");\n\n                      case 16:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[4, 12]]);\n              }));\n\n              return function createproject(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            controller4 = {\n              createproject: createproject\n            };\n            return _context2.abrupt(\"return\", controller4);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function initializeProjects() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeProjects;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzLmpzIl0sIm5hbWVzIjpbImluaXRpYWxpemVQcm9qZWN0cyIsInNxbGl0ZSIsIm9wZW4iLCJkYiIsImNyZWF0ZXByb2plY3QiLCJwcm9wcyIsInVzZXJzX2lkIiwidGl0bGUiLCJjb25zb2xlIiwibG9nIiwiRXJyb3IiLCJydW4iLCJyZXN1bHQiLCJpZCIsInN0bXQiLCJsYXN0SUQiLCJjb250cm9sbGVyNCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztBQUdBLElBQU1BLGtCQUFrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDUkMsbUJBQU9DLElBQVAsQ0FBWSxrQkFBWixDQURROztBQUFBO0FBQ25CQyxZQUFBQSxFQURtQjs7QUFJbkJDLFlBQUFBLGFBSm1CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQ0FJSCxpQkFBT0MsS0FBUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDWkMsd0JBQUFBLFFBRFksR0FDU0QsS0FEVCxDQUNaQyxRQURZLEVBQ0ZDLEtBREUsR0FDU0YsS0FEVCxDQUNGRSxLQURFO0FBRXBCQyx3QkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosRUFBa0NILFFBQWxDLEVBQTJDQyxLQUEzQzs7QUFGb0IsOEJBR2hCLENBQUNGLEtBQUQsSUFBVSxDQUFDQyxRQUFYLElBQXVCLENBQUNDLEtBSFI7QUFBQTtBQUFBO0FBQUE7O0FBQUEsOEJBSVosSUFBSUcsS0FBSixDQUFVLDBCQUFWLENBSlk7O0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBVUdQLEVBQUUsQ0FBQ1EsR0FBSCw2REFDa0NMLFFBRGxDLGlCQUNpREMsS0FEakQsUUFWSDs7QUFBQTtBQVVaSyx3QkFBQUEsTUFWWTtBQWFaQyx3QkFBQUEsRUFiWSxHQWFQRCxNQUFNLENBQUNFLElBQVAsQ0FBWUMsTUFiTDtBQUFBLHlEQWNYRixFQWRXOztBQUFBO0FBQUE7QUFBQTtBQWdCbEJMLHdCQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFoQmtCLDhCQWlCWixJQUFJQyxLQUFKLENBQVUsMEJBQVYsQ0FqQlk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFKRzs7QUFBQSw4QkFJbkJOLGFBSm1CO0FBQUE7QUFBQTtBQUFBOztBQTBFbkJZLFlBQUFBLFdBMUVtQixHQTBFTDtBQUNsQlosY0FBQUEsYUFBYSxFQUFiQTtBQURrQixhQTFFSztBQUFBLDhDQStFbEJZLFdBL0VrQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFsQmhCLGtCQUFrQjtBQUFBO0FBQUE7QUFBQSxHQUF4Qjs7ZUFpRmVBLGtCIiwic291cmNlUm9vdCI6Ii9ob21lL2hhaWRhcmEvRG9jdW1lbnRzL2JlbGFuY2UvYmFjay1lbmQvc3JjL2RiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNxbGl0ZSBmcm9tIFwic3FsaXRlXCI7XG5pbXBvcnQgU1FMIGZyb20gXCJzcWwtdGVtcGxhdGUtc3RyaW5nc1wiO1xuXG5cbmNvbnN0IGluaXRpYWxpemVQcm9qZWN0cyA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgZGIgPSBhd2FpdCBzcWxpdGUub3BlbihcIi4vYmVsYW5jZS5zcWxpdGVcIik7XG5cblxuICBjb25zdCBjcmVhdGVwcm9qZWN0ID0gYXN5bmMgKHByb3BzKSA9PiB7XG4gICAgY29uc3QgeyB1c2Vyc19pZCAsdGl0bGUgIH0gPSBwcm9wcztcbiAgICBjb25zb2xlLmxvZyhcIkNyZWF0ZVByb2plY3RXaXRoXCIsICB1c2Vyc19pZCx0aXRsZSlcbiAgICBpZiAoIXByb3BzIHx8ICF1c2Vyc19pZCB8fCAhdGl0bGUgICkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwieW91IG11c3QgZmlsbCBhbGwgZmllbGRzXCIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy8gY29uc3QgZGF0ZSA9IG5vd0ZvclNRTGl0ZSgpO1xuICAgICAvLyBjb25zb2xlLmxvZyhgSU5TRVJUIElOVE8gdXNlcnMgKGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgZW1haWwscGhvbmVfbnVtYmVyIHBhc3N3b3JkLCBhZGRyZXNzLCBwb3N0ZWxfY29kZSwgY2l0eSApIFZhbHVlcyAoICR7bmFtZX0gLCAke2xhc3RfbmFtZX0gLCAke2VtYWlsfSAsICR7cGFzc3dvcmR9ICwgJHtwaG9uZV9udW1iZXJ9ICwgJHthZHJlc3N9ICwgJHtwb3N0ZWxfY29kZX0gLCAke2NpdHl9KWBcbiAgICAgLy8gKVxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIucnVuKFxuICAgICAgICBgSU5TRVJUIElOVE8gcHJvamVjdHMgKHVzZXJzX2lkICwgdGl0bGUgKSBWYWx1ZXMgKCAke3VzZXJzX2lkfSAsICcke3RpdGxlfScpYFxuICAgICAgKTtcbiAgICAgIGNvbnN0IGlkID0gcmVzdWx0LnN0bXQubGFzdElEO1xuICAgICAgcmV0dXJuIGlkO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5sb2coZXJyKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IGluc2VydCB0aGlzIHRlYXh0XCIpO1xuICAgIH1cbiAgfTtcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIGNvbnN0IGNvbnRyb2xsZXI0ID0ge1xuICAgIGNyZWF0ZXByb2plY3QsXG4gICAgXG5cbiAgfTtcbiAgcmV0dXJuIGNvbnRyb2xsZXI0O1xufTtcbmV4cG9ydCBkZWZhdWx0IGluaXRpYWxpemVQcm9qZWN0czsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "projects.js"
      ],
      "names": [
        "initializeProjects",
        "sqlite",
        "open",
        "db",
        "createproject",
        "props",
        "users_id",
        "title",
        "console",
        "log",
        "Error",
        "run",
        "result",
        "id",
        "stmt",
        "lastID",
        "controller4"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;AAGA,IAAMA,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRC,mBAAOC,IAAP,CAAY,kBAAZ,CADQ;;AAAA;AACnBC,YAAAA,EADmB;;AAInBC,YAAAA,aAJmB;AAAA;AAAA;AAAA;AAAA;AAAA,sCAIH,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,wBAAAA,QADY,GACSD,KADT,CACZC,QADY,EACFC,KADE,GACSF,KADT,CACFE,KADE;AAEpBC,wBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkCH,QAAlC,EAA2CC,KAA3C;;AAFoB,8BAGhB,CAACF,KAAD,IAAU,CAACC,QAAX,IAAuB,CAACC,KAHR;AAAA;AAAA;AAAA;;AAAA,8BAIZ,IAAIG,KAAJ,CAAU,0BAAV,CAJY;;AAAA;AAAA;AAAA;AAAA,+BAUGP,EAAE,CAACQ,GAAH,6DACkCL,QADlC,iBACiDC,KADjD,QAVH;;AAAA;AAUZK,wBAAAA,MAVY;AAaZC,wBAAAA,EAbY,GAaPD,MAAM,CAACE,IAAP,CAAYC,MAbL;AAAA,yDAcXF,EAdW;;AAAA;AAAA;AAAA;AAgBlBL,wBAAAA,OAAO,CAACC,GAAR;AAhBkB,8BAiBZ,IAAIC,KAAJ,CAAU,0BAAV,CAjBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJG;;AAAA,8BAInBN,aAJmB;AAAA;AAAA;AAAA;;AA0EnBY,YAAAA,WA1EmB,GA0EL;AAClBZ,cAAAA,aAAa,EAAbA;AADkB,aA1EK;AAAA,8CA+ElBY,WA/EkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBhB,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;eAiFeA,kB",
      "sourceRoot": "/home/haidara/Documents/belance/back-end/src/db",
      "sourcesContent": [
        "import sqlite from \"sqlite\";\nimport SQL from \"sql-template-strings\";\n\n\nconst initializeProjects = async () => {\n  const db = await sqlite.open(\"./belance.sqlite\");\n\n\n  const createproject = async (props) => {\n    const { users_id ,title  } = props;\n    console.log(\"CreateProjectWith\",  users_id,title)\n    if (!props || !users_id || !title  ) {\n      throw new Error(\"you must fill all fields\");\n    }\n    try {\n      // const date = nowForSQLite();\n     // console.log(`INSERT INTO users (first_name, last_name, email,phone_number password, address, postel_code, city ) Values ( ${name} , ${last_name} , ${email} , ${password} , ${phone_number} , ${adress} , ${postel_code} , ${city})`\n     // )\n      const result = await db.run(\n        `INSERT INTO projects (users_id , title ) Values ( ${users_id} , '${title}')`\n      );\n      const id = result.stmt.lastID;\n      return id;\n    } catch (err) {\n      console.log(err)\n      throw new Error(\"cannot insert this teaxt\");\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const controller4 = {\n    createproject,\n    \n\n  };\n  return controller4;\n};\nexport default initializeProjects;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570800825244
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/Belance/back-end/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/Belance/back-end\",\"filename\":\"/home/haidara/Documents/Belance/back-end/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/Belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/Belance/back-end",
      "filename": "/home/haidara/Documents/Belance/back-end/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/Belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/Belance/back-end/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/Belance/back-end/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/Belance/back-end/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nvar _users = _interopRequireDefault(require(\"./db/users\"));\n\nvar _projects = _interopRequireDefault(require(\"./db/projects\"));\n\nvar _auth = require(\"./auth.js\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _verfiy = _interopRequireDefault(require(\"./db/verfiy\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//import jwt from 'jsonwebtoken'\nvar start =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9() {\n    var controller3, controller4;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return (0, _users[\"default\"])();\n\n          case 2:\n            controller3 = _context9.sent;\n            _context9.next = 5;\n            return (0, _projects[\"default\"])();\n\n          case 5:\n            controller4 = _context9.sent;\n\n            //USERS VIEW\n            _app[\"default\"].get(\"/api/userslist\",\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(req, res) {\n                var users_accounts;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return controller3.getUsers();\n\n                      case 2:\n                        users_accounts = _context.sent;\n                        res.json({\n                          data: users_accounts\n                        });\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].post('/api/adduser',\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(req, res, next) {\n                var _req$body, name, email, password, date, type, about_me, experience, adress, user;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _req$body = req.body, name = _req$body.name, email = _req$body.email, password = _req$body.password, date = _req$body.date, type = _req$body.type, about_me = _req$body.about_me, experience = _req$body.experience, adress = _req$body.adress;\n                        _context2.next = 4;\n                        return controller3.addUser({\n                          name: name,\n                          email: email,\n                          password: password,\n                          date: date,\n                          type: type,\n                          about_me: about_me,\n                          experience: experience,\n                          adress: adress\n                        });\n\n                      case 4:\n                        user = _context2.sent;\n                        res.send({\n                          NewUser: user,\n                          status: true\n                        });\n                        _context2.next = 11;\n                        break;\n\n                      case 8:\n                        _context2.prev = 8;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        next(_context2.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 8]]);\n              }));\n\n              return function (_x3, _x4, _x5) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].post('/api/users/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(req, res, next) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        id = req.params.id;\n                        _context3.next = 4;\n                        return controller3.deleteUsers(id);\n\n                      case 4:\n                        result = _context3.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        console.log();\n                        _context3.next = 12;\n                        break;\n\n                      case 9:\n                        _context3.prev = 9;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        next(_context3.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 9]]);\n              }));\n\n              return function (_x6, _x7, _x8) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].post('/api/users/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(req, res, next) {\n                var id, _req$body2, name, email, password, date, type, about_me, experience, adress, result;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        id = req.params.id;\n                        _req$body2 = req.body, name = _req$body2.name, email = _req$body2.email, password = _req$body2.password, date = _req$body2.date, type = _req$body2.type, about_me = _req$body2.about_me, experience = _req$body2.experience, adress = _req$body2.adress;\n                        _context4.next = 5;\n                        return controller3.updateUsers(id, {\n                          name: name,\n                          email: email,\n                          password: password,\n                          date: date,\n                          type: type,\n                          about_me: about_me,\n                          experience: experience,\n                          adress: adress\n                        });\n\n                      case 5:\n                        result = _context4.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        return _context4.abrupt(\"return\", result);\n\n                      case 10:\n                        _context4.prev = 10;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        next(_context4.t0);\n\n                      case 13:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 10]]);\n              }));\n\n              return function (_x9, _x10, _x11) {\n                return _ref5.apply(this, arguments);\n              };\n            }()); ////////////////projects\n\n\n            _app[\"default\"].post('/projects/create',\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(req, res, next) {\n                var _req$body3, users_id, title, result;\n\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.prev = 0;\n                        _req$body3 = req.body, users_id = _req$body3.users_id, title = _req$body3.title;\n                        _context5.next = 4;\n                        return controller4.createproject({\n                          users_id: users_id,\n                          title: title\n                        });\n\n                      case 4:\n                        result = _context5.sent;\n                        res.json({\n                          done: true,\n                          result: result\n                        });\n                        _context5.next = 11;\n                        break;\n\n                      case 8:\n                        _context5.prev = 8;\n                        _context5.t0 = _context5[\"catch\"](0);\n                        next(_context5.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[0, 8]]);\n              }));\n\n              return function (_x12, _x13, _x14) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].get(\"/projects/list\",\n            /*#__PURE__*/\n            function () {\n              var _ref7 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee6(req, res) {\n                var projects;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _context6.next = 2;\n                        return controller4.getProjects();\n\n                      case 2:\n                        projects = _context6.sent;\n                        res.json({\n                          data: projects\n                        });\n\n                      case 4:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x15, _x16) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].post('projects/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref8 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(req, res, next) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.prev = 0;\n                        id = req.params.id;\n                        _context7.next = 4;\n                        return controller4.deleteProjects(id);\n\n                      case 4:\n                        result = _context7.sent;\n                        res.json({\n                          success: true,\n                          result: result\n                        });\n                        console.log();\n                        _context7.next = 12;\n                        break;\n\n                      case 9:\n                        _context7.prev = 9;\n                        _context7.t0 = _context7[\"catch\"](0);\n                        next(_context7.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[0, 9]]);\n              }));\n\n              return function (_x17, _x18, _x19) {\n                return _ref8.apply(this, arguments);\n              };\n            }());\n\n            _app[\"default\"].post('/api/login',\n            /*#__PURE__*/\n            function () {\n              var _ref9 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee8(req, res) {\n                var user, check;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        console.log(\"here\");\n                        user = {\n                          first_name: req.body.first_name,\n                          password: req.body.password\n                        };\n                        console.log(user);\n                        _context8.next = 5;\n                        return controller3.findUser(user);\n\n                      case 5:\n                        check = _context8.sent;\n                        console.log(check);\n\n                        if (check) {\n                          jwt.sign({\n                            user: user\n                          }, 'secretkey', {\n                            expiresIn: '3000s'\n                          }, function (err, token) {\n                            res.json({\n                              token: token,\n                              user: user\n                            });\n                          });\n                        } else res.json({\n                          success: false\n                        });\n\n                      case 8:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function (_x20, _x21) {\n                return _ref9.apply(this, arguments);\n              };\n            }());\n            /**\n             * Route that returns a list of contacts\n             * @module contacts/list\n             * @param {Express.Request} req - request\n             * @param {Express.Response} res - response \n             * @return {json} rows - array of contacts\n             */\n\n\n            _app[\"default\"].post('/api/posts', _verfiy[\"default\"], function (req, res) {\n              console.log(req.token); //const text = req.body.text\n              // console.log(token);\n\n              jwt.verify(req.token, 'secretkey', function (err, authData) {\n                if (err) {\n                  res.json({\n                    message: \"not verified\",\n                    err: err\n                  }); //res.sendStatus(403);\n                } else {\n                  //const result = await controller3.addUser(text)\n                  res.json({\n                    message: \"verified\",\n                    authData: authData\n                  });\n                }\n              });\n            });\n\n            _app[\"default\"].listen(5001, function () {\n              console.log(\"server listening on port 8080\");\n            });\n\n          case 16:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nstart(); //export default app;\n\nmodule.exports = _app[\"default\"];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "start",
        "controller3",
        "controller4",
        "app",
        "get",
        "req",
        "res",
        "getUsers",
        "users_accounts",
        "json",
        "data",
        "post",
        "next",
        "body",
        "name",
        "email",
        "password",
        "date",
        "type",
        "about_me",
        "experience",
        "adress",
        "addUser",
        "user",
        "send",
        "NewUser",
        "status",
        "id",
        "params",
        "deleteUsers",
        "result",
        "success",
        "console",
        "log",
        "updateUsers",
        "users_id",
        "title",
        "createproject",
        "done",
        "getProjects",
        "projects",
        "deleteProjects",
        "first_name",
        "findUser",
        "check",
        "jwt",
        "sign",
        "expiresIn",
        "err",
        "token",
        "verifyToken",
        "verify",
        "authData",
        "message",
        "listen",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src",
      "sourcesContent": [
        "import app from \"./app\";\nimport initializeUsers from \"./db/users\"\nimport initializeProjects from \"./db/projects\"\n\nimport { isloggedIn, authenticateUser, logout } from \"./auth.js\";\nimport path from 'path'\nimport verifyToken from \"./db/verfiy\"\n//import jwt from 'jsonwebtoken'\n\n\n\nconst start = async () => {\n\n  const controller3 = await initializeUsers();\n\n  const controller4 = await initializeProjects();\n\n\n\n\n\n  //USERS VIEW\n\n  app.get(\"/api/userslist\", async (req, res) => {\n\n    const users_accounts = await controller3.getUsers()\n    res.json({\n      data: users_accounts\n    })\n  });\n\n  app.post('/api/adduser', async (req, res, next) => {\n\n    try {\n      const { name, email, password, date, type, about_me, experience, adress } = req.body\n\n      const user = await controller3.addUser({ name, email, password, date, type, about_me, experience, adress })\n      res.send({ NewUser: user, status: true })\n    } catch (err) {\n      next(err)\n    }\n\n  })\n  app.post('/api/users/delete/:id', async (req, res, next) => {\n\n    try {\n      const { id } = req.params;\n      const result = await controller3.deleteUsers(id);\n      res.json({ success: true, result });\n      console.log()\n    } catch (err) {\n      next(err);\n    }\n  });\n\n\n  app.post('/api/users/update/:id', async (req, res, next) => {\n\n    try {\n      const { id } = req.params;\n      const { name, email, password, date, type, about_me, experience, adress } = req.body;\n      const result = await controller3.updateUsers(id, {\n        name, email, password, date, type, about_me, experience, adress\n\n      });\n      res.json({ success: true, result });\n      return (result);\n    } catch (err) {\n      next(err);\n    }\n  });\n  ////////////////projects\n\n  app.post('/projects/create', async (req, res, next) => {\n    try {\n      const { users_id, title } = req.body;\n      const result = await controller4.createproject({ users_id, title });\n      res.json({ done: true, result });\n    } catch (err) {\n      next(err);\n    }\n  });\n\n  app.get(\"/projects/list\", async (req, res) => {\n\n    const projects = await controller4.getProjects()\n    res.json({\n      data: projects\n    })\n  });\n\n  app.post('projects/delete/:id', async (req, res, next) => {\n\n    try {\n      const { id } = req.params;\n      const result = await controller4.deleteProjects(id);\n      res.json({ success: true, result });\n      console.log()\n    } catch (err) {\n      next(err);\n    }\n  });\n\n  \n\n\n  \n\n\n\n\n\n\n\n  app.post('/api/login', async (req, res) => {\n    console.log(\"here\")\n    const user = {\n      first_name: req.body.first_name,\n      password: req.body.password\n    }\n    console.log(user)\n    const check = await controller3.findUser(user);\n    console.log(check)\n\n    if (check) {\n      jwt.sign({ user }, 'secretkey', { expiresIn: '3000s' }, (err, token) => {\n\n        res.json({\n          token,\n          user\n        });\n      });\n    }\n    else\n      res.json({\n        success: false\n      });\n  });\n\n  /**\n   * Route that returns a list of contacts\n   * @module contacts/list\n   * @param {Express.Request} req - request\n   * @param {Express.Response} res - response \n   * @return {json} rows - array of contacts\n   */\n\n  app.post('/api/posts', verifyToken, (req, res) => {\n    console.log(req.token);\n    //const text = req.body.text\n    // console.log(token);\n    jwt.verify(req.token, 'secretkey', (err, authData) => {\n      if (err) {\n        res.json({\n          message: \"not verified\",\n          err\n        })\n        //res.sendStatus(403);\n\n      } else {\n        //const result = await controller3.addUser(text)\n\n        res.json({\n          message: \"verified\",\n          authData\n        });\n      }\n    })\n  });\n\n\n\n  app.listen(5001\n    , () => {\n    console.log(\"server listening on port 8080\");\n  });\n};\nstart();\n//export default app;\nmodule.exports = app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570963625602
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/Belance/back-end/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/Belance/back-end\",\"filename\":\"/home/haidara/Documents/Belance/back-end/src/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/Belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/Belance/back-end",
      "filename": "/home/haidara/Documents/Belance/back-end/src/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/Belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/Belance/back-end/src/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/Belance/back-end/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/Belance/back-end/src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _httpErrors = _interopRequireDefault(require(\"http-errors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// import cookieParser from 'cookie-parser' // parses cookies\n// parses sessions\n// import favicon from 'serve-favicon' // serves favicon\n//import cors from 'cors' // allows cross-domain requests\n// better JS errors\n//import path from 'path'\nvar bodyParser = require('body-parser');\n\nvar app = (0, _express[\"default\"])(); // create a new app\n\nvar IS_PRODUCTION = app.get('env') === 'production';\n\nif (IS_PRODUCTION) {\n  app.set('trust proxy', 1); // secures the app if it is running behind Nginx/Apache/simila\n} //app.use(cors()); // allows cross domain requests\n\n\napp.use(_express[\"default\"].json()); // allows POST requests with JSON\n\napp.use(_express[\"default\"].urlencoded({\n  extended: false\n})); // allows POST requests with GET-like parameters\n//app.use(cookieParser()); // Parses cookies\n// app.use(favicon(path.join(__dirname, '../public', 'favicon.ico'))) // <-- location of favicon\n//app.use(express.static(path.join(__dirname, '../public'))); // <-- location of public dir\n\napp.use(bodyParser.json());\napp.use((0, _expressSession[\"default\"])({\n  // handles sessions\n  secret: 'keyboard cat',\n  // <-- this should be a secret phrase\n  cookie: {\n    secure: IS_PRODUCTION\n  },\n  // <-- secure only in production\n  resave: true,\n  saveUninitialized: true\n}));\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJib2R5UGFyc2VyIiwicmVxdWlyZSIsImFwcCIsIklTX1BST0RVQ1RJT04iLCJnZXQiLCJzZXQiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInNlY3JldCIsImNvb2tpZSIsInNlY3VyZSIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUM7O0FBR0Q7Ozs7QUFKQTtBQUN1QztBQUN2QztBQUNBO0FBQ3NDO0FBQ3RDO0FBQ0EsSUFBSUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUF4Qjs7QUFFQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVosQyxDQUF1Qjs7QUFFdkIsSUFBTUMsYUFBYSxHQUFHRCxHQUFHLENBQUNFLEdBQUosQ0FBUSxLQUFSLE1BQW1CLFlBQXpDOztBQUVBLElBQUlELGFBQUosRUFBbUI7QUFDakJELEVBQUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLGFBQVIsRUFBdUIsQ0FBdkIsRUFEaUIsQ0FDUztBQUMzQixDLENBQ0Q7OztBQUNBSCxHQUFHLENBQUNJLEdBQUosQ0FBUUMsb0JBQVFDLElBQVIsRUFBUixFLENBQXlCOztBQUN6Qk4sR0FBRyxDQUFDSSxHQUFKLENBQVFDLG9CQUFRRSxVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQW5CLENBQVIsRSxDQUFrRDtBQUNsRDtBQUNBO0FBQ0E7O0FBQ0FSLEdBQUcsQ0FBQ0ksR0FBSixDQUFRTixVQUFVLENBQUNRLElBQVgsRUFBUjtBQUNBTixHQUFHLENBQUNJLEdBQUosQ0FBUSxnQ0FBUTtBQUFFO0FBQ2hCSyxFQUFBQSxNQUFNLEVBQUUsY0FETTtBQUNVO0FBQ3hCQyxFQUFBQSxNQUFNLEVBQUU7QUFBRUMsSUFBQUEsTUFBTSxFQUFFVjtBQUFWLEdBRk07QUFFcUI7QUFDbkNXLEVBQUFBLE1BQU0sRUFBRSxJQUhNO0FBSWRDLEVBQUFBLGlCQUFpQixFQUFFO0FBSkwsQ0FBUixDQUFSO2VBUWViLEciLCJzb3VyY2VSb290IjoiL2hvbWUvaGFpZGFyYS9Eb2N1bWVudHMvQmVsYW5jZS9iYWNrLWVuZC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuLy8gaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tICdjb29raWUtcGFyc2VyJyAvLyBwYXJzZXMgY29va2llc1xuIGltcG9ydCBzZXNzaW9uIGZyb20gJ2V4cHJlc3Mtc2Vzc2lvbicgLy8gcGFyc2VzIHNlc3Npb25zXG4vLyBpbXBvcnQgZmF2aWNvbiBmcm9tICdzZXJ2ZS1mYXZpY29uJyAvLyBzZXJ2ZXMgZmF2aWNvblxuLy9pbXBvcnQgY29ycyBmcm9tICdjb3JzJyAvLyBhbGxvd3MgY3Jvc3MtZG9tYWluIHJlcXVlc3RzXG5pbXBvcnQgY3JlYXRlRXJyb3IgZnJvbSAnaHR0cC1lcnJvcnMnIC8vIGJldHRlciBKUyBlcnJvcnNcbi8vaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcbnZhciBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpOyAvLyBjcmVhdGUgYSBuZXcgYXBwXG5cbmNvbnN0IElTX1BST0RVQ1RJT04gPSBhcHAuZ2V0KCdlbnYnKSA9PT0gJ3Byb2R1Y3Rpb24nXG5cbmlmIChJU19QUk9EVUNUSU9OKSB7XG4gIGFwcC5zZXQoJ3RydXN0IHByb3h5JywgMSkgLy8gc2VjdXJlcyB0aGUgYXBwIGlmIGl0IGlzIHJ1bm5pbmcgYmVoaW5kIE5naW54L0FwYWNoZS9zaW1pbGFcbn1cbi8vYXBwLnVzZShjb3JzKCkpOyAvLyBhbGxvd3MgY3Jvc3MgZG9tYWluIHJlcXVlc3RzXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTsgLy8gYWxsb3dzIFBPU1QgcmVxdWVzdHMgd2l0aCBKU09OXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7IC8vIGFsbG93cyBQT1NUIHJlcXVlc3RzIHdpdGggR0VULWxpa2UgcGFyYW1ldGVyc1xuLy9hcHAudXNlKGNvb2tpZVBhcnNlcigpKTsgLy8gUGFyc2VzIGNvb2tpZXNcbi8vIGFwcC51c2UoZmF2aWNvbihwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vcHVibGljJywgJ2Zhdmljb24uaWNvJykpKSAvLyA8LS0gbG9jYXRpb24gb2YgZmF2aWNvblxuLy9hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi9wdWJsaWMnKSkpOyAvLyA8LS0gbG9jYXRpb24gb2YgcHVibGljIGRpclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKHNlc3Npb24oeyAvLyBoYW5kbGVzIHNlc3Npb25zXG4gIHNlY3JldDogJ2tleWJvYXJkIGNhdCcsIC8vIDwtLSB0aGlzIHNob3VsZCBiZSBhIHNlY3JldCBwaHJhc2VcbiAgY29va2llOiB7IHNlY3VyZTogSVNfUFJPRFVDVElPTiB9LCAvLyA8LS0gc2VjdXJlIG9ubHkgaW4gcHJvZHVjdGlvblxuICByZXNhdmU6IHRydWUsXG4gIHNhdmVVbmluaXRpYWxpemVkOiB0cnVlXG59KSlcblxuXG5leHBvcnQgZGVmYXVsdCBhcHA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "app",
        "IS_PRODUCTION",
        "get",
        "set",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "secret",
        "cookie",
        "secure",
        "resave",
        "saveUninitialized"
      ],
      "mappings": ";;;;;;;AAAA;;AAEC;;AAGD;;;;AAJA;AACuC;AACvC;AACA;AACsC;AACtC;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AAEA,IAAMC,GAAG,GAAG,0BAAZ,C,CAAuB;;AAEvB,IAAMC,aAAa,GAAGD,GAAG,CAACE,GAAJ,CAAQ,KAAR,MAAmB,YAAzC;;AAEA,IAAID,aAAJ,EAAmB;AACjBD,EAAAA,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,CAAvB,EADiB,CACS;AAC3B,C,CACD;;;AACAH,GAAG,CAACI,GAAJ,CAAQC,oBAAQC,IAAR,EAAR,E,CAAyB;;AACzBN,GAAG,CAACI,GAAJ,CAAQC,oBAAQE,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAAkD;AAClD;AACA;AACA;;AACAR,GAAG,CAACI,GAAJ,CAAQN,UAAU,CAACQ,IAAX,EAAR;AACAN,GAAG,CAACI,GAAJ,CAAQ,gCAAQ;AAAE;AAChBK,EAAAA,MAAM,EAAE,cADM;AACU;AACxBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,MAAM,EAAEV;AAAV,GAFM;AAEqB;AACnCW,EAAAA,MAAM,EAAE,IAHM;AAIdC,EAAAA,iBAAiB,EAAE;AAJL,CAAR,CAAR;eAQeb,G",
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src",
      "sourcesContent": [
        "import express from 'express'\n// import cookieParser from 'cookie-parser' // parses cookies\n import session from 'express-session' // parses sessions\n// import favicon from 'serve-favicon' // serves favicon\n//import cors from 'cors' // allows cross-domain requests\nimport createError from 'http-errors' // better JS errors\n//import path from 'path'\nvar bodyParser = require('body-parser');\n\nconst app = express(); // create a new app\n\nconst IS_PRODUCTION = app.get('env') === 'production'\n\nif (IS_PRODUCTION) {\n  app.set('trust proxy', 1) // secures the app if it is running behind Nginx/Apache/simila\n}\n//app.use(cors()); // allows cross domain requests\napp.use(express.json()); // allows POST requests with JSON\napp.use(express.urlencoded({ extended: false })); // allows POST requests with GET-like parameters\n//app.use(cookieParser()); // Parses cookies\n// app.use(favicon(path.join(__dirname, '../public', 'favicon.ico'))) // <-- location of favicon\n//app.use(express.static(path.join(__dirname, '../public'))); // <-- location of public dir\napp.use(bodyParser.json());\napp.use(session({ // handles sessions\n  secret: 'keyboard cat', // <-- this should be a secret phrase\n  cookie: { secure: IS_PRODUCTION }, // <-- secure only in production\n  resave: true,\n  saveUninitialized: true\n}))\n\n\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570786667547
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/Belance/back-end/src/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/Belance/back-end\",\"filename\":\"/home/haidara/Documents/Belance/back-end/src/db/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/Belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/Belance/back-end",
      "filename": "/home/haidara/Documents/Belance/back-end/src/db/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/Belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/Belance/back-end/src/db/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/Belance/back-end/src/db/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/Belance/back-end/src/db",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nvar _sqlTemplateStrings = _interopRequireDefault(require(\"sql-template-strings\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"SELECT * FROM users WHERE name = \", \" AND password = \", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Delete FROM users where users_id = \", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeUsers =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getUsers, addUser, deleteUsers, updateUsers, findUser, controller3;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open(\"./belence1.sqlite\");\n\n          case 2:\n            db = _context6.sent;\n\n            getUsers =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(props) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        stmt = \"SELECT * FROM users\";\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n                        return _context.abrupt(\"return\", rows);\n\n                      case 8:\n                        _context.prev = 8;\n                        _context.t0 = _context[\"catch\"](0);\n                        console.log(_context.t0);\n                        throw new Error(\"could not retrieve list!\");\n\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 8]]);\n              }));\n\n              return function getUsers(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            addUser =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(props) {\n                var name, email, password, date, type, about_me, experience, adress, result, id;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        name = props.name, email = props.email, password = props.password, date = props.date, type = props.type, about_me = props.about_me, experience = props.experience, adress = props.adress;\n                        console.log(\"addUsersWithName\", name, email, password, date, type, about_me, experience, adress);\n\n                        if (!(!props || !name || !email || !password || !date || !type || !about_me || !experience || !adress)) {\n                          _context2.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"you must fill all fields\");\n\n                      case 4:\n                        _context2.prev = 4;\n                        _context2.next = 7;\n                        return db.run(\"INSERT INTO users (name,email,password,date,type,about_me,experience,adress ) Values ( '\".concat(name, \"' , '\").concat(email, \"' , '\").concat(password, \"' , '\").concat(date, \"' ,  '\").concat(type, \"' , '\").concat(about_me, \"','\").concat(experience, \"','\").concat(adress, \"')\"));\n\n                      case 7:\n                        result = _context2.sent;\n                        id = result.stmt.lastID;\n                        return _context2.abrupt(\"return\", id);\n\n                      case 12:\n                        _context2.prev = 12;\n                        _context2.t0 = _context2[\"catch\"](4);\n                        console.log(_context2.t0);\n                        throw new Error(\"cannot insert this teaxt\");\n\n                      case 16:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[4, 12]]);\n              }));\n\n              return function addUser(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            deleteUsers =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return db.run((0, _sqlTemplateStrings[\"default\"])(_templateObject(), id));\n\n                      case 3:\n                        result = _context3.sent;\n\n                        if (!(result.stmt.changes === 0)) {\n                          _context3.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"could not delete user with id = \".concat(id, \" or wrong id\"));\n\n                      case 6:\n                        return _context3.abrupt(\"return\", true);\n\n                      case 9:\n                        _context3.prev = 9;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        throw new Error(\"could not delete the user\");\n\n                      case 12:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 9]]);\n              }));\n\n              return function deleteUsers(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            updateUsers =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id, props) {\n                var name, email, password, date, type, about_me, experience, adress, stmt, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        name = props.name, email = props.email, password = props.password, date = props.date, type = props.type, about_me = props.about_me, experience = props.experience, adress = props.adress;\n                        _context4.prev = 1;\n\n                        if (!(!id || !id || !props || !props)) {\n                          _context4.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"you must provide an id and/or one of the inputs\");\n\n                      case 4:\n                        stmt = \"UPDATE users SET name=(\\\"\".concat(name, \"\\\"), email=(\\\"\").concat(email, \"\\\"), password=(\\\"\").concat(password, \"\\\"), date=(\\\"\").concat(date, \"\\\"), type=(\\\"\").concat(type, \"\\\"), about_me=(\\\"\").concat(about_me, \"\\\"),experience=(\\\"\").concat(experience, \"\\\") , adress=(\\\"\").concat(adress, \"\\\") WHERE users_id=(\").concat(id, \")\");\n                        _context4.next = 7;\n                        return db.all(stmt);\n\n                      case 7:\n                        result = _context4.sent;\n                        return _context4.abrupt(\"return\", result);\n\n                      case 11:\n                        _context4.prev = 11;\n                        _context4.t0 = _context4[\"catch\"](1);\n                        throw new Error(\"Can't update user account\");\n\n                      case 14:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[1, 11]]);\n              }));\n\n              return function updateUsers(_x4, _x5) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            findUser =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(props) {\n                var name, password, stmt, rows, user;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name, password = props.password;\n                        _context5.prev = 1;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject2(), name, password);\n                        _context5.next = 5;\n                        return db.all(stmt);\n\n                      case 5:\n                        rows = _context5.sent;\n                        user = rows[0];\n\n                        if (user) {\n                          _context5.next = 11;\n                          break;\n                        }\n\n                        throw new Error('Incorrect username or password!');\n\n                      case 11:\n                        return _context5.abrupt(\"return\", user);\n\n                      case 12:\n                        _context5.next = 17;\n                        break;\n\n                      case 14:\n                        _context5.prev = 14;\n                        _context5.t0 = _context5[\"catch\"](1);\n                        throw new Error('Could not perform operation!');\n\n                      case 17:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[1, 14]]);\n              }));\n\n              return function findUser(_x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n            /**\n             * retrieves the contacts from the database\n             * @function getContact\n             * @param {number} id id to search by\n             * @returns {array} contact found\n             */\n\n\n            controller3 = {\n              getUsers: getUsers,\n              findUser: findUser,\n              addUser: addUser,\n              deleteUsers: deleteUsers,\n              updateUsers: updateUsers\n            };\n            return _context6.abrupt(\"return\", controller3);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function initializeUsers() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeUsers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "initializeUsers",
        "sqlite",
        "open",
        "db",
        "getUsers",
        "props",
        "stmt",
        "all",
        "rows",
        "console",
        "log",
        "Error",
        "addUser",
        "name",
        "email",
        "password",
        "date",
        "type",
        "about_me",
        "experience",
        "adress",
        "run",
        "result",
        "id",
        "lastID",
        "deleteUsers",
        "SQL",
        "changes",
        "updateUsers",
        "findUser",
        "user",
        "controller3"
      ],
      "mappings": "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",
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src/db",
      "sourcesContent": [
        "import sqlite from \"sqlite\";\nimport SQL from \"sql-template-strings\";\n\n\nconst initializeUsers = async () => {\n  const db = await sqlite.open(\"./belence1.sqlite\");\n\n  \n\n  const getUsers = async props => {\n    try {\n      let stmt = `SELECT * FROM users`;\n      const rows = await db.all(stmt);\n      return rows;\n    }\n    catch (err) {\n      console.log(err)\n      throw new Error(\"could not retrieve list!\")\n    }\n  };\n\n\n  const addUser = async (props) => {\n    const { name, email, password, date, type, about_me, experience,adress  } = props;\n    console.log(\"addUsersWithName\",  name, email, password, date, type, about_me, experience,adress)\n    if (!props || !name || !email || !password || !date|| !type||!about_me||!experience||!adress ) {\n      throw new Error(\"you must fill all fields\");\n    }\n    try {\n      // const date = nowForSQLite();\n     // console.log(`INSERT INTO users (first_name, last_name, email,phone_number password, address, postel_code, city ) Values ( ${name} , ${last_name} , ${email} , ${password} , ${phone_number} , ${adress} , ${postel_code} , ${city})`\n     // )\n      const result = await db.run(\n        `INSERT INTO users (name,email,password,date,type,about_me,experience,adress ) Values ( '${name}' , '${email}' , '${password}' , '${date}' ,  '${type}' , '${about_me}','${experience}','${adress}')`\n      );\n      const id = result.stmt.lastID;\n      return id;\n    } catch (err) {\n      console.log(err)\n      throw new Error(\"cannot insert this teaxt\");\n    }\n  };\n\n  const deleteUsers = async (id)  => {\n    try {\n      const result = await db.run(\n        SQL`Delete FROM users where users_id = ${id}`\n      );\n      if (result.stmt.changes === 0) {\n        throw new Error(`could not delete user with id = ${id} or wrong id`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(\"could not delete the user\");\n    }\n  };\n\n\n  const updateUsers = async (id,  props) => {\n    const {name, email, password, date, type, about_me, experience,adress} = props;\n      try {\n    if (!id ||  (!id || !props) || !props) {\n      throw new Error(\"you must provide an id and/or one of the inputs\");\n    }\n    \n      const stmt = `UPDATE users SET name=(\"${name}\"), email=(\"${email}\"), password=(\"${password}\"), date=(\"${date}\"), type=(\"${type}\"), about_me=(\"${about_me}\"),experience=(\"${experience}\") , adress=(\"${adress}\") WHERE users_id=(${id})`;\n      const result = await db.all(stmt);\n      return (result);\n    } catch (err) {\n        throw new Error(\"Can't update user account\")\n    }\n};\n\n  const findUser = async props => {\n    const { name, password } = props;\n    try {\n      const stmt = SQL`SELECT * FROM users WHERE name = ${name} AND password = ${password}`;\n      const rows = await db.all(stmt);\n      const user = rows[0]\n      if (!user) {\n        throw new Error('Incorrect username or password!')\n      }\n      else\n        return user;\n\n    }\n    catch (err) {\n      throw new Error('Could not perform operation!')\n    }\n  }\n\n\n\n\n\n  /**\n   * retrieves the contacts from the database\n   * @function getContact\n   * @param {number} id id to search by\n   * @returns {array} contact found\n   */\n\n\n\n\n\n  const controller3 = {\n    getUsers,\n    findUser,\n    addUser,\n    deleteUsers,\n    updateUsers\n\n  };\n  return controller3;\n};\nexport default initializeUsers;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570970530353
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/Belance/back-end/src/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/Belance/back-end\",\"filename\":\"/home/haidara/Documents/Belance/back-end/src/db/projects.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/Belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/Belance/back-end",
      "filename": "/home/haidara/Documents/Belance/back-end/src/db/projects.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/Belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/Belance/back-end/src/db/projects.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/Belance/back-end/src/db/projects.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/Belance/back-end/src/db",
        "sourceFileName": "projects.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nvar _sqlTemplateStrings = _interopRequireDefault(require(\"sql-template-strings\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Delete FROM projects where users_id = \", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"SELECT * FROM users INNER JOIN projects ON users.users_id = projects.users_id\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeProjects =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4() {\n    var createproject, getProjects, deleteProjects, controller4;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            // const db = await sqlite.open(\"./belance.sqlite\");\n            createproject =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(props) {\n                var users_id, title, result, id;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        users_id = props.users_id, title = props.title;\n                        console.log(\"CreateProjectWith\", users_id, title);\n\n                        if (!(!props || !users_id || !title)) {\n                          _context.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"you must fill all fields\");\n\n                      case 4:\n                        _context.prev = 4;\n                        _context.next = 7;\n                        return db.run(\"INSERT INTO projects (users_id , title ) Values ( \".concat(users_id, \" , '\").concat(title, \"')\"));\n\n                      case 7:\n                        result = _context.sent;\n                        id = result.stmt.lastID;\n                        return _context.abrupt(\"return\", id);\n\n                      case 12:\n                        _context.prev = 12;\n                        _context.t0 = _context[\"catch\"](4);\n                        console.log(_context.t0);\n                        throw new Error(\"cannot insert this teaxt\");\n\n                      case 16:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[4, 12]]);\n              }));\n\n              return function createproject(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getProjects =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(props) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        stmt = (0, _sqlTemplateStrings[\"default\"])(_templateObject());\n                        _context2.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context2.sent;\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 8:\n                        _context2.prev = 8;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        console.log(_context2.t0);\n                        throw new Error(\"could not retrieve list!\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 8]]);\n              }));\n\n              return function getProjects(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            deleteProjects =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return db.run((0, _sqlTemplateStrings[\"default\"])(_templateObject2(), id));\n\n                      case 3:\n                        result = _context3.sent;\n\n                        if (!(result.stmt.changes === 0)) {\n                          _context3.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"could not delete user with id = \".concat(id, \" or wrong id\"));\n\n                      case 6:\n                        return _context3.abrupt(\"return\", true);\n\n                      case 9:\n                        _context3.prev = 9;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        throw new Error(\"could not delete the user\");\n\n                      case 12:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 9]]);\n              }));\n\n              return function deleteProjects(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            controller4 = {\n              createproject: createproject,\n              getProjects: getProjects,\n              deleteProjects: deleteProjects\n            };\n            return _context4.abrupt(\"return\", controller4);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function initializeProjects() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeProjects;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzLmpzIl0sIm5hbWVzIjpbImluaXRpYWxpemVQcm9qZWN0cyIsImNyZWF0ZXByb2plY3QiLCJwcm9wcyIsInVzZXJzX2lkIiwidGl0bGUiLCJjb25zb2xlIiwibG9nIiwiRXJyb3IiLCJkYiIsInJ1biIsInJlc3VsdCIsImlkIiwic3RtdCIsImxhc3RJRCIsImdldFByb2plY3RzIiwiU1FMIiwiYWxsIiwicm93cyIsImRlbGV0ZVByb2plY3RzIiwiY2hhbmdlcyIsImNvbnRyb2xsZXI0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdBLElBQU1BLGtCQUFrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3pCO0FBR01DLFlBQUFBLGFBSm1CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQ0FJSCxpQkFBT0MsS0FBUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDWkMsd0JBQUFBLFFBRFksR0FDU0QsS0FEVCxDQUNaQyxRQURZLEVBQ0ZDLEtBREUsR0FDU0YsS0FEVCxDQUNGRSxLQURFO0FBRXBCQyx3QkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosRUFBa0NILFFBQWxDLEVBQTJDQyxLQUEzQzs7QUFGb0IsOEJBR2hCLENBQUNGLEtBQUQsSUFBVSxDQUFDQyxRQUFYLElBQXVCLENBQUNDLEtBSFI7QUFBQTtBQUFBO0FBQUE7O0FBQUEsOEJBSVosSUFBSUcsS0FBSixDQUFVLDBCQUFWLENBSlk7O0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBVUdDLEVBQUUsQ0FBQ0MsR0FBSCw2REFDa0NOLFFBRGxDLGlCQUNpREMsS0FEakQsUUFWSDs7QUFBQTtBQVVaTSx3QkFBQUEsTUFWWTtBQWFaQyx3QkFBQUEsRUFiWSxHQWFQRCxNQUFNLENBQUNFLElBQVAsQ0FBWUMsTUFiTDtBQUFBLHlEQWNYRixFQWRXOztBQUFBO0FBQUE7QUFBQTtBQWdCbEJOLHdCQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFoQmtCLDhCQWlCWixJQUFJQyxLQUFKLENBQVUsMEJBQVYsQ0FqQlk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFKRzs7QUFBQSw4QkFJbkJOLGFBSm1CO0FBQUE7QUFBQTtBQUFBOztBQXlCbkJhLFlBQUFBLFdBekJtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBeUJMLGtCQUFNWixLQUFOO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRVpVLHdCQUFBQSxJQUZZLE9BRUxHLDhCQUZLO0FBQUE7QUFBQSwrQkFHR1AsRUFBRSxDQUFDUSxHQUFILENBQU9KLElBQVAsQ0FISDs7QUFBQTtBQUdWSyx3QkFBQUEsSUFIVTtBQUFBLDBEQUlUQSxJQUpTOztBQUFBO0FBQUE7QUFBQTtBQU9oQlosd0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQVBnQiw4QkFRVixJQUFJQyxLQUFKLENBQVUsMEJBQVYsQ0FSVTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQXpCSzs7QUFBQSw4QkF5Qm5CTyxXQXpCbUI7QUFBQTtBQUFBO0FBQUE7O0FBc0NuQkksWUFBQUEsY0F0Q21CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQ0FzQ0Ysa0JBQU9QLEVBQVA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUVFSCxFQUFFLENBQUNDLEdBQUgsS0FDbkJNLDhCQURtQixzQkFDeUJKLEVBRHpCLEVBRkY7O0FBQUE7QUFFYkQsd0JBQUFBLE1BRmE7O0FBQUEsOEJBS2ZBLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZTyxPQUFaLEtBQXdCLENBTFQ7QUFBQTtBQUFBO0FBQUE7O0FBQUEsOEJBTVgsSUFBSVosS0FBSiwyQ0FBNkNJLEVBQTdDLGtCQU5XOztBQUFBO0FBQUEsMERBUVosSUFSWTs7QUFBQTtBQUFBO0FBQUE7QUFBQSw4QkFVYixJQUFJSixLQUFKLENBQVUsMkJBQVYsQ0FWYTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQXRDRTs7QUFBQSw4QkFzQ25CVyxjQXRDbUI7QUFBQTtBQUFBO0FBQUE7O0FBcUduQkUsWUFBQUEsV0FyR21CLEdBcUdMO0FBQ2xCbkIsY0FBQUEsYUFBYSxFQUFiQSxhQURrQjtBQUVsQmEsY0FBQUEsV0FBVyxFQUFYQSxXQUZrQjtBQUdsQkksY0FBQUEsY0FBYyxFQUFkQTtBQUhrQixhQXJHSztBQUFBLDhDQTRHbEJFLFdBNUdrQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFsQnBCLGtCQUFrQjtBQUFBO0FBQUE7QUFBQSxHQUF4Qjs7ZUE4R2VBLGtCIiwic291cmNlUm9vdCI6Ii9ob21lL2hhaWRhcmEvRG9jdW1lbnRzL0JlbGFuY2UvYmFjay1lbmQvc3JjL2RiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNxbGl0ZSBmcm9tIFwic3FsaXRlXCI7XG5pbXBvcnQgU1FMIGZyb20gXCJzcWwtdGVtcGxhdGUtc3RyaW5nc1wiO1xuXG5cbmNvbnN0IGluaXRpYWxpemVQcm9qZWN0cyA9IGFzeW5jICgpID0+IHtcbiAgLy8gY29uc3QgZGIgPSBhd2FpdCBzcWxpdGUub3BlbihcIi4vYmVsYW5jZS5zcWxpdGVcIik7XG5cblxuICBjb25zdCBjcmVhdGVwcm9qZWN0ID0gYXN5bmMgKHByb3BzKSA9PiB7XG4gICAgY29uc3QgeyB1c2Vyc19pZCAsdGl0bGUgIH0gPSBwcm9wcztcbiAgICBjb25zb2xlLmxvZyhcIkNyZWF0ZVByb2plY3RXaXRoXCIsICB1c2Vyc19pZCx0aXRsZSlcbiAgICBpZiAoIXByb3BzIHx8ICF1c2Vyc19pZCB8fCAhdGl0bGUgICkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwieW91IG11c3QgZmlsbCBhbGwgZmllbGRzXCIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy8gY29uc3QgZGF0ZSA9IG5vd0ZvclNRTGl0ZSgpO1xuICAgICAvLyBjb25zb2xlLmxvZyhgSU5TRVJUIElOVE8gdXNlcnMgKGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgZW1haWwscGhvbmVfbnVtYmVyIHBhc3N3b3JkLCBhZGRyZXNzLCBwb3N0ZWxfY29kZSwgY2l0eSApIFZhbHVlcyAoICR7bmFtZX0gLCAke2xhc3RfbmFtZX0gLCAke2VtYWlsfSAsICR7cGFzc3dvcmR9ICwgJHtwaG9uZV9udW1iZXJ9ICwgJHthZHJlc3N9ICwgJHtwb3N0ZWxfY29kZX0gLCAke2NpdHl9KWBcbiAgICAgLy8gKVxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIucnVuKFxuICAgICAgICBgSU5TRVJUIElOVE8gcHJvamVjdHMgKHVzZXJzX2lkICwgdGl0bGUgKSBWYWx1ZXMgKCAke3VzZXJzX2lkfSAsICcke3RpdGxlfScpYFxuICAgICAgKTtcbiAgICAgIGNvbnN0IGlkID0gcmVzdWx0LnN0bXQubGFzdElEO1xuICAgICAgcmV0dXJuIGlkO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5sb2coZXJyKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IGluc2VydCB0aGlzIHRlYXh0XCIpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBnZXRQcm9qZWN0cyA9IGFzeW5jIHByb3BzID0+IHtcbiAgICB0cnkge1xuICAgICAgbGV0IHN0bXQgPSBTUUxgU0VMRUNUICogRlJPTSB1c2VycyBJTk5FUiBKT0lOIHByb2plY3RzIE9OIHVzZXJzLnVzZXJzX2lkID0gcHJvamVjdHMudXNlcnNfaWRgO1xuICAgICAgY29uc3Qgcm93cyA9IGF3YWl0IGRiLmFsbChzdG10KTtcbiAgICAgIHJldHVybiByb3dzO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjb3VsZCBub3QgcmV0cmlldmUgbGlzdCFcIilcbiAgICB9XG4gIH07XG5cblxuICBjb25zdCBkZWxldGVQcm9qZWN0cyA9IGFzeW5jIChpZCkgID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIucnVuKFxuICAgICAgICBTUUxgRGVsZXRlIEZST00gcHJvamVjdHMgd2hlcmUgdXNlcnNfaWQgPSAke2lkfWBcbiAgICAgICk7XG4gICAgICBpZiAocmVzdWx0LnN0bXQuY2hhbmdlcyA9PT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNvdWxkIG5vdCBkZWxldGUgdXNlciB3aXRoIGlkID0gJHtpZH0gb3Igd3JvbmcgaWRgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY291bGQgbm90IGRlbGV0ZSB0aGUgdXNlclwiKTtcbiAgICB9XG4gIH07XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBjb25zdCBjb250cm9sbGVyNCA9IHtcbiAgICBjcmVhdGVwcm9qZWN0LFxuICAgIGdldFByb2plY3RzLFxuICAgIGRlbGV0ZVByb2plY3RzXG4gICAgXG5cbiAgfTtcbiAgcmV0dXJuIGNvbnRyb2xsZXI0O1xufTtcbmV4cG9ydCBkZWZhdWx0IGluaXRpYWxpemVQcm9qZWN0czsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "projects.js"
      ],
      "names": [
        "initializeProjects",
        "createproject",
        "props",
        "users_id",
        "title",
        "console",
        "log",
        "Error",
        "db",
        "run",
        "result",
        "id",
        "stmt",
        "lastID",
        "getProjects",
        "SQL",
        "all",
        "rows",
        "deleteProjects",
        "changes",
        "controller4"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACzB;AAGMC,YAAAA,aAJmB;AAAA;AAAA;AAAA;AAAA;AAAA,sCAIH,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,wBAAAA,QADY,GACSD,KADT,CACZC,QADY,EACFC,KADE,GACSF,KADT,CACFE,KADE;AAEpBC,wBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAkCH,QAAlC,EAA2CC,KAA3C;;AAFoB,8BAGhB,CAACF,KAAD,IAAU,CAACC,QAAX,IAAuB,CAACC,KAHR;AAAA;AAAA;AAAA;;AAAA,8BAIZ,IAAIG,KAAJ,CAAU,0BAAV,CAJY;;AAAA;AAAA;AAAA;AAAA,+BAUGC,EAAE,CAACC,GAAH,6DACkCN,QADlC,iBACiDC,KADjD,QAVH;;AAAA;AAUZM,wBAAAA,MAVY;AAaZC,wBAAAA,EAbY,GAaPD,MAAM,CAACE,IAAP,CAAYC,MAbL;AAAA,yDAcXF,EAdW;;AAAA;AAAA;AAAA;AAgBlBN,wBAAAA,OAAO,CAACC,GAAR;AAhBkB,8BAiBZ,IAAIC,KAAJ,CAAU,0BAAV,CAjBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJG;;AAAA,8BAInBN,aAJmB;AAAA;AAAA;AAAA;;AAyBnBa,YAAAA,WAzBmB;AAAA;AAAA;AAAA;AAAA;AAAA,sCAyBL,kBAAMZ,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZU,wBAAAA,IAFY,OAELG,8BAFK;AAAA;AAAA,+BAGGP,EAAE,CAACQ,GAAH,CAAOJ,IAAP,CAHH;;AAAA;AAGVK,wBAAAA,IAHU;AAAA,0DAITA,IAJS;;AAAA;AAAA;AAAA;AAOhBZ,wBAAAA,OAAO,CAACC,GAAR;AAPgB,8BAQV,IAAIC,KAAJ,CAAU,0BAAV,CARU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzBK;;AAAA,8BAyBnBO,WAzBmB;AAAA;AAAA;AAAA;;AAsCnBI,YAAAA,cAtCmB;AAAA;AAAA;AAAA;AAAA;AAAA,sCAsCF,kBAAOP,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEEH,EAAE,CAACC,GAAH,KACnBM,8BADmB,sBACyBJ,EADzB,EAFF;;AAAA;AAEbD,wBAAAA,MAFa;;AAAA,8BAKfA,MAAM,CAACE,IAAP,CAAYO,OAAZ,KAAwB,CALT;AAAA;AAAA;AAAA;;AAAA,8BAMX,IAAIZ,KAAJ,2CAA6CI,EAA7C,kBANW;;AAAA;AAAA,0DAQZ,IARY;;AAAA;AAAA;AAAA;AAAA,8BAUb,IAAIJ,KAAJ,CAAU,2BAAV,CAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAtCE;;AAAA,8BAsCnBW,cAtCmB;AAAA;AAAA;AAAA;;AAqGnBE,YAAAA,WArGmB,GAqGL;AAClBnB,cAAAA,aAAa,EAAbA,aADkB;AAElBa,cAAAA,WAAW,EAAXA,WAFkB;AAGlBI,cAAAA,cAAc,EAAdA;AAHkB,aArGK;AAAA,8CA4GlBE,WA5GkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBpB,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;eA8GeA,kB",
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src/db",
      "sourcesContent": [
        "import sqlite from \"sqlite\";\nimport SQL from \"sql-template-strings\";\n\n\nconst initializeProjects = async () => {\n  // const db = await sqlite.open(\"./belance.sqlite\");\n\n\n  const createproject = async (props) => {\n    const { users_id ,title  } = props;\n    console.log(\"CreateProjectWith\",  users_id,title)\n    if (!props || !users_id || !title  ) {\n      throw new Error(\"you must fill all fields\");\n    }\n    try {\n      // const date = nowForSQLite();\n     // console.log(`INSERT INTO users (first_name, last_name, email,phone_number password, address, postel_code, city ) Values ( ${name} , ${last_name} , ${email} , ${password} , ${phone_number} , ${adress} , ${postel_code} , ${city})`\n     // )\n      const result = await db.run(\n        `INSERT INTO projects (users_id , title ) Values ( ${users_id} , '${title}')`\n      );\n      const id = result.stmt.lastID;\n      return id;\n    } catch (err) {\n      console.log(err)\n      throw new Error(\"cannot insert this teaxt\");\n    }\n  };\n\n  const getProjects = async props => {\n    try {\n      let stmt = SQL`SELECT * FROM users INNER JOIN projects ON users.users_id = projects.users_id`;\n      const rows = await db.all(stmt);\n      return rows;\n    }\n    catch (err) {\n      console.log(err)\n      throw new Error(\"could not retrieve list!\")\n    }\n  };\n\n\n  const deleteProjects = async (id)  => {\n    try {\n      const result = await db.run(\n        SQL`Delete FROM projects where users_id = ${id}`\n      );\n      if (result.stmt.changes === 0) {\n        throw new Error(`could not delete user with id = ${id} or wrong id`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(\"could not delete the user\");\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const controller4 = {\n    createproject,\n    getProjects,\n    deleteProjects\n    \n\n  };\n  return controller4;\n};\nexport default initializeProjects;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570969618974
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/Belance/back-end/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/Belance/back-end\",\"filename\":\"/home/haidara/Documents/Belance/back-end/src/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/Belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/Belance/back-end",
      "filename": "/home/haidara/Documents/Belance/back-end/src/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/Belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/Belance/back-end/src/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/Belance/back-end/src/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/Belance/back-end/src",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIvaG9tZS9oYWlkYXJhL0RvY3VtZW50cy9CZWxhbmNlL2JhY2stZW5kL3NyYyIsInNvdXJjZXNDb250ZW50IjpbXX0=",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src",
      "sourcesContent": []
    },
    "sourceType": "script",
    "mtime": 1568993577185
  },
  "{\"sourceRoot\":\"/home/haidara/Documents/Belance/back-end/src/db\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/haidara/Documents/Belance/back-end\",\"filename\":\"/home/haidara/Documents/Belance/back-end/src/db/verfiy.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/haidara/Documents/Belance/back-end\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src/db",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/haidara/Documents/Belance/back-end",
      "filename": "/home/haidara/Documents/Belance/back-end/src/db/verfiy.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/haidara/Documents/Belance/back-end",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/haidara/Documents/Belance/back-end/src/db/verfiy.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/haidara/Documents/Belance/back-end/src/db/verfiy.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/haidara/Documents/Belance/back-end/src/db",
        "sourceFileName": "verfiy.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction verifyToken(req, res, next) {\n  // check if beraer is un defined\n  var bearerHeader = req.headers['authorization'];\n\n  if (typeof bearerHeader !== 'undefined') {\n    // split at the space\n    var bearer = bearerHeader.split(' '); // get token from array\n\n    var bearerToken = bearer[1]; //set the token\n\n    req.token = bearerToken; //next middleware\n\n    next();\n  } else {\n    // forbidden\n    res.send(403);\n  }\n}\n\n;\nvar _default = verifyToken;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcmZpeS5qcyJdLCJuYW1lcyI6WyJ2ZXJpZnlUb2tlbiIsInJlcSIsInJlcyIsIm5leHQiLCJiZWFyZXJIZWFkZXIiLCJoZWFkZXJzIiwiYmVhcmVyIiwic3BsaXQiLCJiZWFyZXJUb2tlbiIsInRva2VuIiwic2VuZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVBLFNBQVNBLFdBQVQsQ0FBcUJDLEdBQXJCLEVBQTBCQyxHQUExQixFQUErQkMsSUFBL0IsRUFBcUM7QUFFakM7QUFDQSxNQUFNQyxZQUFZLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGVBQVosQ0FBckI7O0FBQ0EsTUFBSSxPQUFPRCxZQUFQLEtBQXdCLFdBQTVCLEVBQXlDO0FBQ3JDO0FBQ0EsUUFBTUUsTUFBTSxHQUFHRixZQUFZLENBQUNHLEtBQWIsQ0FBbUIsR0FBbkIsQ0FBZixDQUZxQyxDQUdyQzs7QUFDQSxRQUFNQyxXQUFXLEdBQUdGLE1BQU0sQ0FBQyxDQUFELENBQTFCLENBSnFDLENBS3JDOztBQUNBTCxJQUFBQSxHQUFHLENBQUNRLEtBQUosR0FBWUQsV0FBWixDQU5xQyxDQVFyQzs7QUFDQUwsSUFBQUEsSUFBSTtBQUNQLEdBVkQsTUFVTztBQUVIO0FBQ0FELElBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTLEdBQVQ7QUFDSDtBQUVKOztBQUFBO2VBRWNWLFciLCJzb3VyY2VSb290IjoiL2hvbWUvaGFpZGFyYS9Eb2N1bWVudHMvQmVsYW5jZS9iYWNrLWVuZC9zcmMvZGIiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuZnVuY3Rpb24gdmVyaWZ5VG9rZW4ocmVxLCByZXMsIG5leHQpIHtcblxuICAgIC8vIGNoZWNrIGlmIGJlcmFlciBpcyB1biBkZWZpbmVkXG4gICAgY29uc3QgYmVhcmVySGVhZGVyID0gcmVxLmhlYWRlcnNbJ2F1dGhvcml6YXRpb24nXTtcbiAgICBpZiAodHlwZW9mIGJlYXJlckhlYWRlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgLy8gc3BsaXQgYXQgdGhlIHNwYWNlXG4gICAgICAgIGNvbnN0IGJlYXJlciA9IGJlYXJlckhlYWRlci5zcGxpdCgnICcpO1xuICAgICAgICAvLyBnZXQgdG9rZW4gZnJvbSBhcnJheVxuICAgICAgICBjb25zdCBiZWFyZXJUb2tlbiA9IGJlYXJlclsxXTtcbiAgICAgICAgLy9zZXQgdGhlIHRva2VuXG4gICAgICAgIHJlcS50b2tlbiA9IGJlYXJlclRva2VuO1xuXG4gICAgICAgIC8vbmV4dCBtaWRkbGV3YXJlXG4gICAgICAgIG5leHQoKTtcbiAgICB9IGVsc2Uge1xuXG4gICAgICAgIC8vIGZvcmJpZGRlblxuICAgICAgICByZXMuc2VuZCg0MDMpO1xuICAgIH1cblxufTtcblxuZXhwb3J0IGRlZmF1bHQgdmVyaWZ5VG9rZW47Il19",
    "map": {
      "version": 3,
      "sources": [
        "verfiy.js"
      ],
      "names": [
        "verifyToken",
        "req",
        "res",
        "next",
        "bearerHeader",
        "headers",
        "bearer",
        "split",
        "bearerToken",
        "token",
        "send"
      ],
      "mappings": ";;;;;;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAEjC;AACA,MAAMC,YAAY,GAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,CAArB;;AACA,MAAI,OAAOD,YAAP,KAAwB,WAA5B,EAAyC;AACrC;AACA,QAAME,MAAM,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAf,CAFqC,CAGrC;;AACA,QAAMC,WAAW,GAAGF,MAAM,CAAC,CAAD,CAA1B,CAJqC,CAKrC;;AACAL,IAAAA,GAAG,CAACQ,KAAJ,GAAYD,WAAZ,CANqC,CAQrC;;AACAL,IAAAA,IAAI;AACP,GAVD,MAUO;AAEH;AACAD,IAAAA,GAAG,CAACQ,IAAJ,CAAS,GAAT;AACH;AAEJ;;AAAA;eAEcV,W",
      "sourceRoot": "/home/haidara/Documents/Belance/back-end/src/db",
      "sourcesContent": [
        "\n\nfunction verifyToken(req, res, next) {\n\n    // check if beraer is un defined\n    const bearerHeader = req.headers['authorization'];\n    if (typeof bearerHeader !== 'undefined') {\n        // split at the space\n        const bearer = bearerHeader.split(' ');\n        // get token from array\n        const bearerToken = bearer[1];\n        //set the token\n        req.token = bearerToken;\n\n        //next middleware\n        next();\n    } else {\n\n        // forbidden\n        res.send(403);\n    }\n\n};\n\nexport default verifyToken;"
      ]
    },
    "sourceType": "script",
    "mtime": 1569506692964
  }
}